data
export remapCount
align 4
LABELV remapCount
byte 4 0
export AddRemap
code
proc AddRemap 8 8
file "..\..\..\..\code\game\g_utils.c"
line 18
;1:// Copyright (C) 1999-2000 Id Software, Inc.
;2://
;3:// g_utils.c -- misc utility functions for game module
;4:
;5:#include "g_local.h"
;6:
;7:typedef struct {
;8:  char oldShader[MAX_QPATH];
;9:  char newShader[MAX_QPATH];
;10:  float timeOffset;
;11:} shaderRemap_t;
;12:
;13:#define MAX_SHADER_REMAPS 128
;14:
;15:int remapCount = 0;
;16:shaderRemap_t remappedShaders[MAX_SHADER_REMAPS];
;17:
;18:void AddRemap(const char *oldShader, const char *newShader, float timeOffset) {
line 21
;19:	int i;
;20:
;21:	for (i = 0; i < remapCount; i++) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $92
JUMPV
LABELV $89
line 22
;22:		if (Q_stricmp(oldShader, remappedShaders[i].oldShader) == 0) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRI4
CNSTI4 132
MULI4
ADDRGP4 remappedShaders
ADDP4
ARGP4
ADDRLP4 4
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 0
NEI4 $93
line 24
;23:			// found it, just update this one
;24:			strcpy(remappedShaders[i].newShader,newShader);
ADDRLP4 0
INDIRI4
CNSTI4 132
MULI4
ADDRGP4 remappedShaders+64
ADDP4
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 strcpy
CALLP4
pop
line 25
;25:			remappedShaders[i].timeOffset = timeOffset;
ADDRLP4 0
INDIRI4
CNSTI4 132
MULI4
ADDRGP4 remappedShaders+128
ADDP4
ADDRFP4 8
INDIRF4
ASGNF4
line 26
;26:			return;
ADDRGP4 $88
JUMPV
LABELV $93
line 28
;27:		}
;28:	}
LABELV $90
line 21
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $92
ADDRLP4 0
INDIRI4
ADDRGP4 remapCount
INDIRI4
LTI4 $89
line 29
;29:	if (remapCount < MAX_SHADER_REMAPS) {
ADDRGP4 remapCount
INDIRI4
CNSTI4 128
GEI4 $97
line 30
;30:		strcpy(remappedShaders[remapCount].newShader,newShader);
ADDRGP4 remapCount
INDIRI4
CNSTI4 132
MULI4
ADDRGP4 remappedShaders+64
ADDP4
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 strcpy
CALLP4
pop
line 31
;31:		strcpy(remappedShaders[remapCount].oldShader,oldShader);
ADDRGP4 remapCount
INDIRI4
CNSTI4 132
MULI4
ADDRGP4 remappedShaders
ADDP4
ARGP4
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 strcpy
CALLP4
pop
line 32
;32:		remappedShaders[remapCount].timeOffset = timeOffset;
ADDRGP4 remapCount
INDIRI4
CNSTI4 132
MULI4
ADDRGP4 remappedShaders+128
ADDP4
ADDRFP4 8
INDIRF4
ASGNF4
line 33
;33:		remapCount++;
ADDRLP4 4
ADDRGP4 remapCount
ASGNP4
ADDRLP4 4
INDIRP4
ADDRLP4 4
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 34
;34:	}
LABELV $97
line 35
;35:}
LABELV $88
endproc AddRemap 8 8
bss
align 1
LABELV $102
skip 4096
export BuildShaderStateConfig
code
proc BuildShaderStateConfig 144 24
line 37
;36:
;37:const char *BuildShaderStateConfig() {
line 42
;38:	static char	buff[MAX_STRING_CHARS*4];
;39:	char out[(MAX_QPATH * 2) + 5];
;40:	int i;
;41:  
;42:	memset(buff, 0, MAX_STRING_CHARS);
ADDRGP4 $102
ARGP4
CNSTI4 0
ARGI4
CNSTI4 1024
ARGI4
ADDRGP4 memset
CALLP4
pop
line 43
;43:	for (i = 0; i < remapCount; i++) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $106
JUMPV
LABELV $103
line 44
;44:		Com_sprintf(out, (MAX_QPATH * 2) + 5, "%s=%s:%5.2f@", remappedShaders[i].oldShader, remappedShaders[i].newShader, remappedShaders[i].timeOffset);
ADDRLP4 4
ARGP4
CNSTI4 133
ARGI4
ADDRGP4 $107
ARGP4
ADDRLP4 0
INDIRI4
CNSTI4 132
MULI4
ADDRGP4 remappedShaders
ADDP4
ARGP4
ADDRLP4 0
INDIRI4
CNSTI4 132
MULI4
ADDRGP4 remappedShaders+64
ADDP4
ARGP4
ADDRLP4 0
INDIRI4
CNSTI4 132
MULI4
ADDRGP4 remappedShaders+128
ADDP4
INDIRF4
ARGF4
ADDRGP4 Com_sprintf
CALLV
pop
line 45
;45:		Q_strcat( buff, sizeof( buff ), out);
ADDRGP4 $102
ARGP4
CNSTI4 4096
ARGI4
ADDRLP4 4
ARGP4
ADDRGP4 Q_strcat
CALLV
pop
line 46
;46:	}
LABELV $104
line 43
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $106
ADDRLP4 0
INDIRI4
ADDRGP4 remapCount
INDIRI4
LTI4 $103
line 47
;47:	return buff;
ADDRGP4 $102
RETP4
LABELV $101
endproc BuildShaderStateConfig 144 24
export G_FindConfigstringIndex
proc G_FindConfigstringIndex 1036 12
line 64
;48:}
;49:
;50:/*
;51:=========================================================================
;52:
;53:model / sound configstring indexes
;54:
;55:=========================================================================
;56:*/
;57:
;58:/*
;59:================
;60:G_FindConfigstringIndex
;61:
;62:================
;63:*/
;64:int G_FindConfigstringIndex( char *name, int start, int max, qboolean create ) {
line 68
;65:	int		i;
;66:	char	s[MAX_STRING_CHARS];
;67:
;68:	if ( !name || !name[0] ) {
ADDRLP4 1028
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1028
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $113
ADDRLP4 1028
INDIRP4
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $111
LABELV $113
line 69
;69:		return 0;
CNSTI4 0
RETI4
ADDRGP4 $110
JUMPV
LABELV $111
line 72
;70:	}
;71:
;72:	for ( i=1 ; i<max ; i++ ) {
ADDRLP4 1024
CNSTI4 1
ASGNI4
ADDRGP4 $117
JUMPV
LABELV $114
line 73
;73:		trap_GetConfigstring( start + i, s, sizeof( s ) );
ADDRFP4 4
INDIRI4
ADDRLP4 1024
INDIRI4
ADDI4
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_GetConfigstring
CALLV
pop
line 74
;74:		if ( !s[0] ) {
ADDRLP4 0
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $118
line 75
;75:			break;
ADDRGP4 $116
JUMPV
LABELV $118
line 77
;76:		}
;77:		if ( !strcmp( s, name ) ) {
ADDRLP4 0
ARGP4
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 1032
ADDRGP4 strcmp
CALLI4
ASGNI4
ADDRLP4 1032
INDIRI4
CNSTI4 0
NEI4 $120
line 78
;78:			return i;
ADDRLP4 1024
INDIRI4
RETI4
ADDRGP4 $110
JUMPV
LABELV $120
line 80
;79:		}
;80:	}
LABELV $115
line 72
ADDRLP4 1024
ADDRLP4 1024
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $117
ADDRLP4 1024
INDIRI4
ADDRFP4 8
INDIRI4
LTI4 $114
LABELV $116
line 82
;81:
;82:	if ( !create ) {
ADDRFP4 12
INDIRI4
CNSTI4 0
NEI4 $122
line 83
;83:		return 0;
CNSTI4 0
RETI4
ADDRGP4 $110
JUMPV
LABELV $122
line 86
;84:	}
;85:
;86:	if ( i == max ) {
ADDRLP4 1024
INDIRI4
ADDRFP4 8
INDIRI4
NEI4 $124
line 87
;87:		G_Error( "G_FindConfigstringIndex: overflow" );
ADDRGP4 $126
ARGP4
ADDRGP4 G_Error
CALLV
pop
line 88
;88:	}
LABELV $124
line 90
;89:
;90:	trap_SetConfigstring( start + i, name );
ADDRFP4 4
INDIRI4
ADDRLP4 1024
INDIRI4
ADDI4
ARGI4
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 92
;91:
;92:	return i;
ADDRLP4 1024
INDIRI4
RETI4
LABELV $110
endproc G_FindConfigstringIndex 1036 12
export G_ModelIndex
proc G_ModelIndex 4 16
line 96
;93:}
;94:
;95:
;96:int G_ModelIndex( char *name ) {
line 97
;97:	return G_FindConfigstringIndex (name, CS_MODELS, MAX_MODELS, qtrue);
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 32
ARGI4
CNSTI4 256
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 0
ADDRGP4 G_FindConfigstringIndex
CALLI4
ASGNI4
ADDRLP4 0
INDIRI4
RETI4
LABELV $127
endproc G_ModelIndex 4 16
export G_SoundIndex
proc G_SoundIndex 4 16
line 100
;98:}
;99:
;100:int G_SoundIndex( char *name ) {
line 101
;101:	return G_FindConfigstringIndex (name, CS_SOUNDS, MAX_SOUNDS, qtrue);
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 288
ARGI4
CNSTI4 256
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 0
ADDRGP4 G_FindConfigstringIndex
CALLI4
ASGNI4
ADDRLP4 0
INDIRI4
RETI4
LABELV $128
endproc G_SoundIndex 4 16
export G_TeamCommand
proc G_TeamCommand 8 8
line 114
;102:}
;103:
;104://=====================================================================
;105:
;106:
;107:/*
;108:================
;109:G_TeamCommand
;110:
;111:Broadcasts a command to only a specific team
;112:================
;113:*/
;114:void G_TeamCommand( team_t team, char *cmd ) {
line 117
;115:	int		i;
;116:
;117:	for ( i = 0 ; i < level.maxclients ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $133
JUMPV
LABELV $130
line 118
;118:		if ( level.clients[i].pers.connected == CON_CONNECTED ) {
ADDRLP4 0
INDIRI4
CNSTI4 5604
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 468
ADDP4
INDIRI4
CNSTI4 2
NEI4 $135
line 119
;119:			if ( level.clients[i].sess.sessionTeam == team ) {
ADDRLP4 0
INDIRI4
CNSTI4 5604
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 696
ADDP4
INDIRI4
ADDRFP4 0
INDIRI4
NEI4 $137
line 120
;120:				trap_SendServerCommand( i, va("%s", cmd ));
ADDRGP4 $139
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 0
INDIRI4
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 121
;121:			}
LABELV $137
line 122
;122:		}
LABELV $135
line 123
;123:	}
LABELV $131
line 117
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $133
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $130
line 124
;124:}
LABELV $129
endproc G_TeamCommand 8 8
export G_Find
proc G_Find 8 8
line 140
;125:
;126:
;127:/*
;128:=============
;129:G_Find
;130:
;131:Searches all active entities for the next one that holds
;132:the matching string at fieldofs (use the FOFS() macro) in the structure.
;133:
;134:Searches beginning at the entity after from, or the beginning if NULL
;135:NULL will be returned if the end of the list is reached.
;136:
;137:=============
;138:*/
;139:gentity_t *G_Find (gentity_t *from, int fieldofs, const char *match)
;140:{
line 143
;141:	char	*s;
;142:
;143:	if (!from)
ADDRFP4 0
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $141
line 144
;144:		from = g_entities;
ADDRFP4 0
ADDRGP4 g_entities
ASGNP4
ADDRGP4 $146
JUMPV
LABELV $141
line 146
;145:	else
;146:		from++;
ADDRFP4 0
ADDRFP4 0
INDIRP4
CNSTI4 844
ADDP4
ASGNP4
line 148
;147:
;148:	for ( ; from < &g_entities[level.num_entities] ; from++)
ADDRGP4 $146
JUMPV
LABELV $143
line 149
;149:	{
line 150
;150:		if (!from->inuse)
ADDRFP4 0
INDIRP4
CNSTI4 524
ADDP4
INDIRI4
CNSTI4 0
NEI4 $148
line 151
;151:			continue;
ADDRGP4 $144
JUMPV
LABELV $148
line 152
;152:		s = *(char **) ((byte *)from + fieldofs);
ADDRLP4 0
ADDRFP4 4
INDIRI4
ADDRFP4 0
INDIRP4
ADDP4
INDIRP4
ASGNP4
line 153
;153:		if (!s)
ADDRLP4 0
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $150
line 154
;154:			continue;
ADDRGP4 $144
JUMPV
LABELV $150
line 155
;155:		if (!Q_stricmp (s, match))
ADDRLP4 0
INDIRP4
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 0
NEI4 $152
line 156
;156:			return from;
ADDRFP4 0
INDIRP4
RETP4
ADDRGP4 $140
JUMPV
LABELV $152
line 157
;157:	}
LABELV $144
line 148
ADDRFP4 0
ADDRFP4 0
INDIRP4
CNSTI4 844
ADDP4
ASGNP4
LABELV $146
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 level+12
INDIRI4
CNSTI4 844
MULI4
ADDRGP4 g_entities
ADDP4
CVPU4 4
LTU4 $143
line 159
;158:
;159:	return NULL;
CNSTP4 0
RETP4
LABELV $140
endproc G_Find 8 8
export G_PickTarget
proc G_PickTarget 144 12
line 177
;160:}
;161:
;162:
;163:/*
;164:=============
;165:G_PickTarget
;166:
;167:Selects a random entity from among the targets
;168:=============
;169:*/
;170:#define MAXCHOICES	32
;171:
;172:#if !ESCAPE_MODE	// JUHOX: G_PickTarget() also needs to know the segment
;173:gentity_t *G_PickTarget (char *targetname)
;174:#else
;175:gentity_t* G_PickTarget(char* targetname, int segment)
;176:#endif
;177:{
line 178
;178:	gentity_t	*ent = NULL;
ADDRLP4 0
CNSTP4 0
ASGNP4
line 179
;179:	int		num_choices = 0;
ADDRLP4 4
CNSTI4 0
ASGNI4
line 182
;180:	gentity_t	*choice[MAXCHOICES];
;181:
;182:	if (!targetname)
ADDRFP4 0
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $159
line 183
;183:	{
line 184
;184:		G_Printf("G_PickTarget called with NULL targetname\n");
ADDRGP4 $157
ARGP4
ADDRGP4 G_Printf
CALLV
pop
line 185
;185:		return NULL;
CNSTP4 0
RETP4
ADDRGP4 $154
JUMPV
LABELV $158
line 189
;186:	}
;187:
;188:	while(1)
;189:	{
line 190
;190:		ent = G_Find (ent, FOFS(targetname), targetname);
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 656
ARGI4
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 136
ADDRGP4 G_Find
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 136
INDIRP4
ASGNP4
line 191
;191:		if (!ent)
ADDRLP4 0
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $161
line 192
;192:			break;
ADDRGP4 $160
JUMPV
LABELV $161
line 194
;193:#if ESCAPE_MODE
;194:		if (ent->worldSegment - 1 != segment) continue;	// JUHOX
ADDRLP4 0
INDIRP4
CNSTI4 820
ADDP4
INDIRI4
CNSTI4 1
SUBI4
ADDRFP4 4
INDIRI4
EQI4 $163
ADDRGP4 $159
JUMPV
LABELV $163
line 196
;195:#endif
;196:		choice[num_choices++] = ent;
ADDRLP4 140
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 140
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 140
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 8
ADDP4
ADDRLP4 0
INDIRP4
ASGNP4
line 197
;197:		if (num_choices == MAXCHOICES)
ADDRLP4 4
INDIRI4
CNSTI4 32
NEI4 $165
line 198
;198:			break;
ADDRGP4 $160
JUMPV
LABELV $165
line 199
;199:	}
LABELV $159
line 188
ADDRGP4 $158
JUMPV
LABELV $160
line 201
;200:
;201:	if (!num_choices)
ADDRLP4 4
INDIRI4
CNSTI4 0
NEI4 $167
line 202
;202:	{
line 203
;203:		G_Printf("G_PickTarget: target %s not found\n", targetname);
ADDRGP4 $169
ARGP4
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 G_Printf
CALLV
pop
line 204
;204:		return NULL;
CNSTP4 0
RETP4
ADDRGP4 $154
JUMPV
LABELV $167
line 207
;205:	}
;206:
;207:	return choice[rand() % num_choices];
ADDRLP4 136
ADDRGP4 rand
CALLI4
ASGNI4
ADDRLP4 136
INDIRI4
ADDRLP4 4
INDIRI4
MODI4
CNSTI4 2
LSHI4
ADDRLP4 8
ADDP4
INDIRP4
RETP4
LABELV $154
endproc G_PickTarget 144 12
export G_UseTargets
proc G_UseTargets 20 12
line 222
;208:}
;209:
;210:
;211:/*
;212:==============================
;213:G_UseTargets
;214:
;215:"activator" should be set to the entity that initiated the firing.
;216:
;217:Search for (string)targetname in all entities that
;218:match (string)self.target and call their .use function
;219:
;220:==============================
;221:*/
;222:void G_UseTargets( gentity_t *ent, gentity_t *activator ) {
line 225
;223:	gentity_t		*t;
;224:	
;225:	if ( !ent ) {
ADDRFP4 0
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $171
line 226
;226:		return;
ADDRGP4 $170
JUMPV
LABELV $171
line 229
;227:	}
;228:
;229:	if (ent->targetShaderName && ent->targetShaderNewName) {
ADDRLP4 4
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 4
INDIRP4
CNSTI4 664
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $173
ADDRLP4 4
INDIRP4
CNSTI4 668
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $173
line 230
;230:		float f = level.time * 0.001;
ADDRLP4 8
ADDRGP4 level+32
INDIRI4
CVIF4 4
CNSTF4 981668463
MULF4
ASGNF4
line 231
;231:		AddRemap(ent->targetShaderName, ent->targetShaderNewName, f);
ADDRLP4 12
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 12
INDIRP4
CNSTI4 664
ADDP4
INDIRP4
ARGP4
ADDRLP4 12
INDIRP4
CNSTI4 668
ADDP4
INDIRP4
ARGP4
ADDRLP4 8
INDIRF4
ARGF4
ADDRGP4 AddRemap
CALLV
pop
line 232
;232:		trap_SetConfigstring(CS_SHADERSTATE, BuildShaderStateConfig());
ADDRLP4 16
ADDRGP4 BuildShaderStateConfig
CALLP4
ASGNP4
CNSTI4 24
ARGI4
ADDRLP4 16
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 233
;233:	}
LABELV $173
line 235
;234:
;235:	if ( !ent->target ) {
ADDRFP4 0
INDIRP4
CNSTI4 652
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $176
line 236
;236:		return;
ADDRGP4 $170
JUMPV
LABELV $176
line 239
;237:	}
;238:
;239:	t = NULL;
ADDRLP4 0
CNSTP4 0
ASGNP4
ADDRGP4 $179
JUMPV
LABELV $178
line 240
;240:	while ( (t = G_Find (t, FOFS(targetname), ent->target)) != NULL ) {
line 242
;241:#if ESCAPE_MODE
;242:		if (t->worldSegment != ent->worldSegment) continue;	// JUHOX
ADDRLP4 0
INDIRP4
CNSTI4 820
ADDP4
INDIRI4
ADDRFP4 0
INDIRP4
CNSTI4 820
ADDP4
INDIRI4
EQI4 $181
ADDRGP4 $179
JUMPV
LABELV $181
line 244
;243:#endif
;244:		if ( t == ent ) {
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRFP4 0
INDIRP4
CVPU4 4
NEU4 $183
line 245
;245:			G_Printf ("WARNING: Entity used itself.\n");
ADDRGP4 $185
ARGP4
ADDRGP4 G_Printf
CALLV
pop
line 246
;246:		} else {
ADDRGP4 $184
JUMPV
LABELV $183
line 247
;247:			if ( t->use ) {
ADDRLP4 0
INDIRP4
CNSTI4 712
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $186
line 248
;248:				t->use (t, ent, activator);
ADDRLP4 0
INDIRP4
ARGP4
ADDRFP4 0
INDIRP4
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
CNSTI4 712
ADDP4
INDIRP4
CALLV
pop
line 249
;249:			}
LABELV $186
line 250
;250:		}
LABELV $184
line 251
;251:		if ( !ent->inuse ) {
ADDRFP4 0
INDIRP4
CNSTI4 524
ADDP4
INDIRI4
CNSTI4 0
NEI4 $188
line 252
;252:			G_Printf("entity was removed while using targets\n");
ADDRGP4 $190
ARGP4
ADDRGP4 G_Printf
CALLV
pop
line 253
;253:			return;
ADDRGP4 $170
JUMPV
LABELV $188
line 255
;254:		}
;255:	}
LABELV $179
line 240
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 656
ARGI4
ADDRFP4 0
INDIRP4
CNSTI4 652
ADDP4
INDIRP4
ARGP4
ADDRLP4 8
ADDRGP4 G_Find
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 8
INDIRP4
ASGNP4
ADDRLP4 8
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $178
line 256
;256:}
LABELV $170
endproc G_UseTargets 20 12
data
export acostable
align 4
LABELV acostable
byte 4 1078530011
byte 4 1078267824
byte 4 1078159162
byte 4 1078075742
byte 4 1078005381
byte 4 1077943361
byte 4 1077887263
byte 4 1077835650
byte 4 1077787587
byte 4 1077742422
byte 4 1077699683
byte 4 1077659013
byte 4 1077620134
byte 4 1077582826
byte 4 1077546909
byte 4 1077512236
byte 4 1077478685
byte 4 1077446150
byte 4 1077414543
byte 4 1077383788
byte 4 1077353817
byte 4 1077324572
byte 4 1077296000
byte 4 1077268058
byte 4 1077240702
byte 4 1077213898
byte 4 1077187611
byte 4 1077161812
byte 4 1077136474
byte 4 1077111572
byte 4 1077087084
byte 4 1077062988
byte 4 1077039266
byte 4 1077015900
byte 4 1076992874
byte 4 1076970172
byte 4 1076947782
byte 4 1076925689
byte 4 1076903881
byte 4 1076882348
byte 4 1076861078
byte 4 1076840062
byte 4 1076819290
byte 4 1076798754
byte 4 1076778444
byte 4 1076758354
byte 4 1076738476
byte 4 1076718802
byte 4 1076699327
byte 4 1076680044
byte 4 1076660946
byte 4 1076642029
byte 4 1076623287
byte 4 1076604715
byte 4 1076586308
byte 4 1076568061
byte 4 1076549970
byte 4 1076532030
byte 4 1076514238
byte 4 1076496589
byte 4 1076479080
byte 4 1076461708
byte 4 1076444468
byte 4 1076427359
byte 4 1076410375
byte 4 1076393515
byte 4 1076376775
byte 4 1076360153
byte 4 1076343646
byte 4 1076327252
byte 4 1076310967
byte 4 1076294789
byte 4 1076278717
byte 4 1076262748
byte 4 1076246879
byte 4 1076231109
byte 4 1076215435
byte 4 1076199856
byte 4 1076184370
byte 4 1076168974
byte 4 1076153668
byte 4 1076138448
byte 4 1076123315
byte 4 1076108265
byte 4 1076093298
byte 4 1076078412
byte 4 1076063605
byte 4 1076048876
byte 4 1076034224
byte 4 1076019647
byte 4 1076005144
byte 4 1075990713
byte 4 1075976354
byte 4 1075962065
byte 4 1075947845
byte 4 1075933693
byte 4 1075919608
byte 4 1075905588
byte 4 1075891633
byte 4 1075877741
byte 4 1075863912
byte 4 1075850145
byte 4 1075836437
byte 4 1075822790
byte 4 1075809201
byte 4 1075795670
byte 4 1075782196
byte 4 1075768779
byte 4 1075755416
byte 4 1075742108
byte 4 1075728853
byte 4 1075715652
byte 4 1075702502
byte 4 1075689404
byte 4 1075676357
byte 4 1075663360
byte 4 1075650411
byte 4 1075637512
byte 4 1075624660
byte 4 1075611856
byte 4 1075599098
byte 4 1075586386
byte 4 1075573720
byte 4 1075561099
byte 4 1075548521
byte 4 1075535988
byte 4 1075523497
byte 4 1075511049
byte 4 1075498644
byte 4 1075486279
byte 4 1075473955
byte 4 1075461672
byte 4 1075449429
byte 4 1075437225
byte 4 1075425061
byte 4 1075412934
byte 4 1075400846
byte 4 1075388796
byte 4 1075376782
byte 4 1075364805
byte 4 1075352865
byte 4 1075340960
byte 4 1075329091
byte 4 1075317256
byte 4 1075305457
byte 4 1075293691
byte 4 1075281960
byte 4 1075270262
byte 4 1075258596
byte 4 1075246964
byte 4 1075235364
byte 4 1075223796
byte 4 1075212259
byte 4 1075200754
byte 4 1075189280
byte 4 1075177837
byte 4 1075166423
byte 4 1075155040
byte 4 1075143686
byte 4 1075132362
byte 4 1075121067
byte 4 1075109800
byte 4 1075098562
byte 4 1075087352
byte 4 1075076170
byte 4 1075065015
byte 4 1075053888
byte 4 1075042788
byte 4 1075031714
byte 4 1075020667
byte 4 1075009646
byte 4 1074998651
byte 4 1074987681
byte 4 1074976737
byte 4 1074965819
byte 4 1074954925
byte 4 1074944056
byte 4 1074933211
byte 4 1074922391
byte 4 1074911594
byte 4 1074900821
byte 4 1074890072
byte 4 1074879346
byte 4 1074868643
byte 4 1074857963
byte 4 1074847306
byte 4 1074836671
byte 4 1074826058
byte 4 1074815467
byte 4 1074804898
byte 4 1074794351
byte 4 1074783825
byte 4 1074773320
byte 4 1074762837
byte 4 1074752374
byte 4 1074741931
byte 4 1074731510
byte 4 1074721108
byte 4 1074710727
byte 4 1074700365
byte 4 1074690024
byte 4 1074679701
byte 4 1074669399
byte 4 1074659115
byte 4 1074648851
byte 4 1074638605
byte 4 1074628378
byte 4 1074618170
byte 4 1074607980
byte 4 1074597808
byte 4 1074587654
byte 4 1074577519
byte 4 1074567401
byte 4 1074557300
byte 4 1074547217
byte 4 1074537152
byte 4 1074527103
byte 4 1074517072
byte 4 1074507058
byte 4 1074497060
byte 4 1074487079
byte 4 1074477114
byte 4 1074467166
byte 4 1074457234
byte 4 1074447317
byte 4 1074437417
byte 4 1074427533
byte 4 1074417664
byte 4 1074407811
byte 4 1074397973
byte 4 1074388151
byte 4 1074378343
byte 4 1074368551
byte 4 1074358774
byte 4 1074349011
byte 4 1074339263
byte 4 1074329530
byte 4 1074319811
byte 4 1074310106
byte 4 1074300416
byte 4 1074290739
byte 4 1074281077
byte 4 1074271429
byte 4 1074261794
byte 4 1074252173
byte 4 1074242565
byte 4 1074232971
byte 4 1074223390
byte 4 1074213823
byte 4 1074204268
byte 4 1074194727
byte 4 1074185198
byte 4 1074175683
byte 4 1074166180
byte 4 1074156689
byte 4 1074147211
byte 4 1074137746
byte 4 1074128293
byte 4 1074118852
byte 4 1074109423
byte 4 1074100006
byte 4 1074090601
byte 4 1074081208
byte 4 1074071827
byte 4 1074062457
byte 4 1074053099
byte 4 1074043753
byte 4 1074034418
byte 4 1074025094
byte 4 1074015781
byte 4 1074006480
byte 4 1073997189
byte 4 1073987910
byte 4 1073978641
byte 4 1073969384
byte 4 1073960137
byte 4 1073950900
byte 4 1073941674
byte 4 1073932459
byte 4 1073923254
byte 4 1073914059
byte 4 1073904875
byte 4 1073895701
byte 4 1073886536
byte 4 1073877382
byte 4 1073868238
byte 4 1073859103
byte 4 1073849979
byte 4 1073840864
byte 4 1073831758
byte 4 1073822663
byte 4 1073813576
byte 4 1073804499
byte 4 1073795432
byte 4 1073786374
byte 4 1073777325
byte 4 1073768285
byte 4 1073759254
byte 4 1073750232
byte 4 1073740614
byte 4 1073722605
byte 4 1073704615
byte 4 1073686641
byte 4 1073668685
byte 4 1073650746
byte 4 1073632825
byte 4 1073614920
byte 4 1073597032
byte 4 1073579160
byte 4 1073561305
byte 4 1073543467
byte 4 1073525645
byte 4 1073507839
byte 4 1073490048
byte 4 1073472274
byte 4 1073454516
byte 4 1073436773
byte 4 1073419046
byte 4 1073401334
byte 4 1073383638
byte 4 1073365956
byte 4 1073348290
byte 4 1073330639
byte 4 1073313003
byte 4 1073295381
byte 4 1073277774
byte 4 1073260181
byte 4 1073242603
byte 4 1073225039
byte 4 1073207489
byte 4 1073189953
byte 4 1073172431
byte 4 1073154923
byte 4 1073137429
byte 4 1073119948
byte 4 1073102481
byte 4 1073085027
byte 4 1073067586
byte 4 1073050159
byte 4 1073032744
byte 4 1073015343
byte 4 1072997955
byte 4 1072980579
byte 4 1072963216
byte 4 1072945865
byte 4 1072928527
byte 4 1072911201
byte 4 1072893888
byte 4 1072876587
byte 4 1072859297
byte 4 1072842020
byte 4 1072824755
byte 4 1072807501
byte 4 1072790259
byte 4 1072773029
byte 4 1072755810
byte 4 1072738602
byte 4 1072721406
byte 4 1072704221
byte 4 1072687047
byte 4 1072669884
byte 4 1072652732
byte 4 1072635590
byte 4 1072618460
byte 4 1072601340
byte 4 1072584231
byte 4 1072567132
byte 4 1072550043
byte 4 1072532965
byte 4 1072515897
byte 4 1072498839
byte 4 1072481791
byte 4 1072464753
byte 4 1072447725
byte 4 1072430706
byte 4 1072413697
byte 4 1072396698
byte 4 1072379708
byte 4 1072362728
byte 4 1072345757
byte 4 1072328795
byte 4 1072311842
byte 4 1072294899
byte 4 1072277964
byte 4 1072261038
byte 4 1072244121
byte 4 1072227213
byte 4 1072210314
byte 4 1072193423
byte 4 1072176540
byte 4 1072159666
byte 4 1072142800
byte 4 1072125943
byte 4 1072109093
byte 4 1072092252
byte 4 1072075419
byte 4 1072058593
byte 4 1072041776
byte 4 1072024966
byte 4 1072008164
byte 4 1071991370
byte 4 1071974583
byte 4 1071957803
byte 4 1071941031
byte 4 1071924267
byte 4 1071907509
byte 4 1071890759
byte 4 1071874015
byte 4 1071857279
byte 4 1071840550
byte 4 1071823827
byte 4 1071807111
byte 4 1071790402
byte 4 1071773700
byte 4 1071757004
byte 4 1071740315
byte 4 1071723632
byte 4 1071706955
byte 4 1071690284
byte 4 1071673620
byte 4 1071656962
byte 4 1071640310
byte 4 1071623664
byte 4 1071607024
byte 4 1071590389
byte 4 1071573761
byte 4 1071557138
byte 4 1071540520
byte 4 1071523909
byte 4 1071507302
byte 4 1071490701
byte 4 1071474106
byte 4 1071457515
byte 4 1071440930
byte 4 1071424350
byte 4 1071407775
byte 4 1071391205
byte 4 1071374640
byte 4 1071358080
byte 4 1071341524
byte 4 1071324974
byte 4 1071308427
byte 4 1071291886
byte 4 1071275349
byte 4 1071258816
byte 4 1071242288
byte 4 1071225764
byte 4 1071209244
byte 4 1071192729
byte 4 1071176217
byte 4 1071159710
byte 4 1071143206
byte 4 1071126707
byte 4 1071110211
byte 4 1071093719
byte 4 1071077231
byte 4 1071060746
byte 4 1071044265
byte 4 1071027787
byte 4 1071011313
byte 4 1070994842
byte 4 1070978375
byte 4 1070961910
byte 4 1070945449
byte 4 1070928991
byte 4 1070912536
byte 4 1070896084
byte 4 1070879635
byte 4 1070863189
byte 4 1070846746
byte 4 1070830305
byte 4 1070813867
byte 4 1070797431
byte 4 1070780998
byte 4 1070764568
byte 4 1070748140
byte 4 1070731714
byte 4 1070715290
byte 4 1070698869
byte 4 1070682450
byte 4 1070666033
byte 4 1070649618
byte 4 1070633204
byte 4 1070616793
byte 4 1070600384
byte 4 1070583976
byte 4 1070567570
byte 4 1070551166
byte 4 1070534763
byte 4 1070518361
byte 4 1070501962
byte 4 1070485563
byte 4 1070469166
byte 4 1070452770
byte 4 1070436375
byte 4 1070419982
byte 4 1070403589
byte 4 1070387198
byte 4 1070370807
byte 4 1070354418
byte 4 1070338029
byte 4 1070321640
byte 4 1070305253
byte 4 1070288866
byte 4 1070272480
byte 4 1070256094
byte 4 1070239709
byte 4 1070223324
byte 4 1070206939
byte 4 1070190555
byte 4 1070174171
byte 4 1070157787
byte 4 1070141403
byte 4 1070125019
byte 4 1070108635
byte 4 1070092250
byte 4 1070075866
byte 4 1070059481
byte 4 1070043096
byte 4 1070026711
byte 4 1070010325
byte 4 1069993939
byte 4 1069977552
byte 4 1069961165
byte 4 1069944777
byte 4 1069928388
byte 4 1069911998
byte 4 1069895607
byte 4 1069879216
byte 4 1069862823
byte 4 1069846430
byte 4 1069830035
byte 4 1069813639
byte 4 1069797242
byte 4 1069780844
byte 4 1069764444
byte 4 1069748042
byte 4 1069731640
byte 4 1069715235
byte 4 1069698829
byte 4 1069682422
byte 4 1069666012
byte 4 1069649601
byte 4 1069633188
byte 4 1069616773
byte 4 1069600356
byte 4 1069583936
byte 4 1069567515
byte 4 1069551092
byte 4 1069534666
byte 4 1069518238
byte 4 1069501807
byte 4 1069485374
byte 4 1069468939
byte 4 1069452501
byte 4 1069436060
byte 4 1069419616
byte 4 1069403170
byte 4 1069386721
byte 4 1069370269
byte 4 1069353814
byte 4 1069337356
byte 4 1069320895
byte 4 1069304431
byte 4 1069287963
byte 4 1069271492
byte 4 1069255018
byte 4 1069238540
byte 4 1069222059
byte 4 1069205575
byte 4 1069189086
byte 4 1069172594
byte 4 1069156099
byte 4 1069139599
byte 4 1069123096
byte 4 1069106588
byte 4 1069090077
byte 4 1069073561
byte 4 1069057041
byte 4 1069040517
byte 4 1069023989
byte 4 1069007456
byte 4 1068990919
byte 4 1068974378
byte 4 1068957832
byte 4 1068941281
byte 4 1068924725
byte 4 1068908165
byte 4 1068891600
byte 4 1068875030
byte 4 1068858455
byte 4 1068841875
byte 4 1068825290
byte 4 1068808699
byte 4 1068792104
byte 4 1068775503
byte 4 1068758897
byte 4 1068742285
byte 4 1068725668
byte 4 1068709045
byte 4 1068692416
byte 4 1068675782
byte 4 1068659141
byte 4 1068642495
byte 4 1068625843
byte 4 1068609185
byte 4 1068592521
byte 4 1068575850
byte 4 1068559174
byte 4 1068542491
byte 4 1068525801
byte 4 1068509105
byte 4 1068492403
byte 4 1068475694
byte 4 1068458978
byte 4 1068442256
byte 4 1068425526
byte 4 1068408790
byte 4 1068392047
byte 4 1068375296
byte 4 1068358539
byte 4 1068341774
byte 4 1068325002
byte 4 1068308222
byte 4 1068291436
byte 4 1068274641
byte 4 1068257839
byte 4 1068241029
byte 4 1068224212
byte 4 1068207387
byte 4 1068190553
byte 4 1068173712
byte 4 1068156863
byte 4 1068140005
byte 4 1068123139
byte 4 1068106265
byte 4 1068089383
byte 4 1068072492
byte 4 1068055592
byte 4 1068038684
byte 4 1068021767
byte 4 1068004841
byte 4 1067987907
byte 4 1067970963
byte 4 1067954010
byte 4 1067937049
byte 4 1067920077
byte 4 1067903097
byte 4 1067886107
byte 4 1067869108
byte 4 1067852099
byte 4 1067835081
byte 4 1067818053
byte 4 1067801014
byte 4 1067783966
byte 4 1067766908
byte 4 1067749840
byte 4 1067732762
byte 4 1067715673
byte 4 1067698575
byte 4 1067681465
byte 4 1067664345
byte 4 1067647215
byte 4 1067630074
byte 4 1067612921
byte 4 1067595758
byte 4 1067578584
byte 4 1067561399
byte 4 1067544203
byte 4 1067526996
byte 4 1067509777
byte 4 1067492546
byte 4 1067475304
byte 4 1067458051
byte 4 1067440785
byte 4 1067423508
byte 4 1067406219
byte 4 1067388917
byte 4 1067371604
byte 4 1067354278
byte 4 1067336940
byte 4 1067319590
byte 4 1067302226
byte 4 1067284851
byte 4 1067267462
byte 4 1067250061
byte 4 1067232646
byte 4 1067215219
byte 4 1067197778
byte 4 1067180325
byte 4 1067162857
byte 4 1067145377
byte 4 1067127882
byte 4 1067110374
byte 4 1067092852
byte 4 1067075316
byte 4 1067057767
byte 4 1067040203
byte 4 1067022624
byte 4 1067005032
byte 4 1066987424
byte 4 1066969803
byte 4 1066952166
byte 4 1066934515
byte 4 1066916849
byte 4 1066899168
byte 4 1066881471
byte 4 1066863759
byte 4 1066846032
byte 4 1066828289
byte 4 1066810531
byte 4 1066792757
byte 4 1066774967
byte 4 1066757161
byte 4 1066739338
byte 4 1066721500
byte 4 1066703645
byte 4 1066685773
byte 4 1066667885
byte 4 1066649981
byte 4 1066632059
byte 4 1066614120
byte 4 1066596164
byte 4 1066578191
byte 4 1066560200
byte 4 1066542192
byte 4 1066524166
byte 4 1066506122
byte 4 1066488060
byte 4 1066469980
byte 4 1066451882
byte 4 1066433765
byte 4 1066415630
byte 4 1066397477
byte 4 1066379304
byte 4 1066361112
byte 4 1066342902
byte 4 1066324672
byte 4 1066306423
byte 4 1066288154
byte 4 1066269865
byte 4 1066251557
byte 4 1066233228
byte 4 1066214880
byte 4 1066196511
byte 4 1066178121
byte 4 1066159711
byte 4 1066141281
byte 4 1066122829
byte 4 1066104356
byte 4 1066085862
byte 4 1066067346
byte 4 1066048809
byte 4 1066030250
byte 4 1066011670
byte 4 1065993067
byte 4 1065974441
byte 4 1065955794
byte 4 1065937124
byte 4 1065918431
byte 4 1065899715
byte 4 1065880975
byte 4 1065862213
byte 4 1065843427
byte 4 1065824617
byte 4 1065805784
byte 4 1065786926
byte 4 1065768044
byte 4 1065749138
byte 4 1065730207
byte 4 1065711251
byte 4 1065692270
byte 4 1065673264
byte 4 1065654233
byte 4 1065635176
byte 4 1065616093
byte 4 1065596984
byte 4 1065577849
byte 4 1065558687
byte 4 1065539499
byte 4 1065520284
byte 4 1065501042
byte 4 1065481772
byte 4 1065462475
byte 4 1065443150
byte 4 1065423798
byte 4 1065404417
byte 4 1065385008
byte 4 1065365570
byte 4 1065338990
byte 4 1065299998
byte 4 1065260948
byte 4 1065221838
byte 4 1065182669
byte 4 1065143440
byte 4 1065104150
byte 4 1065064799
byte 4 1065025386
byte 4 1064985911
byte 4 1064946374
byte 4 1064906773
byte 4 1064867108
byte 4 1064827380
byte 4 1064787586
byte 4 1064747728
byte 4 1064707803
byte 4 1064667812
byte 4 1064627754
byte 4 1064587629
byte 4 1064547435
byte 4 1064507173
byte 4 1064466841
byte 4 1064426440
byte 4 1064385968
byte 4 1064345425
byte 4 1064304811
byte 4 1064264124
byte 4 1064223364
byte 4 1064182530
byte 4 1064141623
byte 4 1064100640
byte 4 1064059582
byte 4 1064018448
byte 4 1063977237
byte 4 1063935948
byte 4 1063894581
byte 4 1063853135
byte 4 1063811609
byte 4 1063770004
byte 4 1063728317
byte 4 1063686548
byte 4 1063644696
byte 4 1063602762
byte 4 1063560743
byte 4 1063518639
byte 4 1063476450
byte 4 1063434174
byte 4 1063391811
byte 4 1063349360
byte 4 1063306820
byte 4 1063264191
byte 4 1063221470
byte 4 1063178659
byte 4 1063135755
byte 4 1063092758
byte 4 1063049666
byte 4 1063006480
byte 4 1062963198
byte 4 1062919820
byte 4 1062876343
byte 4 1062832767
byte 4 1062789093
byte 4 1062745317
byte 4 1062701439
byte 4 1062657459
byte 4 1062613375
byte 4 1062569187
byte 4 1062524892
byte 4 1062480491
byte 4 1062435982
byte 4 1062391363
byte 4 1062346635
byte 4 1062301794
byte 4 1062256842
byte 4 1062211776
byte 4 1062166594
byte 4 1062121297
byte 4 1062075882
byte 4 1062030349
byte 4 1061984696
byte 4 1061938922
byte 4 1061893025
byte 4 1061847005
byte 4 1061800859
byte 4 1061754587
byte 4 1061708186
byte 4 1061661657
byte 4 1061614996
byte 4 1061568204
byte 4 1061521277
byte 4 1061474215
byte 4 1061427017
byte 4 1061379680
byte 4 1061332202
byte 4 1061284584
byte 4 1061236821
byte 4 1061188914
byte 4 1061140860
byte 4 1061092657
byte 4 1061044305
byte 4 1060995800
byte 4 1060947141
byte 4 1060898326
byte 4 1060849353
byte 4 1060800221
byte 4 1060750927
byte 4 1060701469
byte 4 1060651845
byte 4 1060602053
byte 4 1060552091
byte 4 1060501956
byte 4 1060451648
byte 4 1060401162
byte 4 1060350497
byte 4 1060299650
byte 4 1060248619
byte 4 1060197402
byte 4 1060145995
byte 4 1060094397
byte 4 1060042604
byte 4 1059990615
byte 4 1059938425
byte 4 1059886033
byte 4 1059833435
byte 4 1059780629
byte 4 1059727611
byte 4 1059674379
byte 4 1059620928
byte 4 1059567257
byte 4 1059513361
byte 4 1059459238
byte 4 1059404883
byte 4 1059350293
byte 4 1059295464
byte 4 1059240394
byte 4 1059185077
byte 4 1059129510
byte 4 1059073690
byte 4 1059017611
byte 4 1058961269
byte 4 1058904661
byte 4 1058847781
byte 4 1058790625
byte 4 1058733189
byte 4 1058675467
byte 4 1058617455
byte 4 1058559147
byte 4 1058500538
byte 4 1058441623
byte 4 1058382395
byte 4 1058322850
byte 4 1058262982
byte 4 1058202783
byte 4 1058142249
byte 4 1058081372
byte 4 1058020146
byte 4 1057958564
byte 4 1057896618
byte 4 1057834302
byte 4 1057771607
byte 4 1057708526
byte 4 1057645051
byte 4 1057581174
byte 4 1057516885
byte 4 1057452175
byte 4 1057387036
byte 4 1057321457
byte 4 1057255429
byte 4 1057188942
byte 4 1057121983
byte 4 1057054542
byte 4 1056986608
byte 4 1056871729
byte 4 1056733813
byte 4 1056594834
byte 4 1056454764
byte 4 1056313576
byte 4 1056171238
byte 4 1056027721
byte 4 1055882991
byte 4 1055737015
byte 4 1055589756
byte 4 1055441179
byte 4 1055291243
byte 4 1055139907
byte 4 1054987129
byte 4 1054832862
byte 4 1054677060
byte 4 1054519673
byte 4 1054360646
byte 4 1054199924
byte 4 1054037449
byte 4 1053873156
byte 4 1053706980
byte 4 1053538851
byte 4 1053368693
byte 4 1053196427
byte 4 1053021968
byte 4 1052845223
byte 4 1052666098
byte 4 1052484486
byte 4 1052300277
byte 4 1052113348
byte 4 1051923572
byte 4 1051730806
byte 4 1051534898
byte 4 1051335683
byte 4 1051132979
byte 4 1050926588
byte 4 1050716294
byte 4 1050501858
byte 4 1050283016
byte 4 1050059474
byte 4 1049830905
byte 4 1049596942
byte 4 1049357173
byte 4 1049111129
byte 4 1048858277
byte 4 1048598000
byte 4 1048083177
byte 4 1047528415
byte 4 1046953745
byte 4 1046356808
byte 4 1045734744
byte 4 1045084021
byte 4 1044400201
byte 4 1043677569
byte 4 1042908552
byte 4 1042082748
byte 4 1041185182
byte 4 1040192863
byte 4 1037946775
byte 4 1035277325
byte 4 1031800150
byte 4 0
export G_acos
code
proc G_acos 4 0
line 394
;257:
;258:
;259:// JUHOX: for unknown reason the acos() function is not exported to the game module in g_syscalls.asm
;260:// this version is taken from bg_lib.c, slightly modified
;261:#if 1
;262:float acostable[] = {
;263:3.14159265f,3.07908248f,3.05317551f,3.03328655f,3.01651113f,3.00172442f,2.98834964f,2.97604422f,
;264:2.96458497f,2.95381690f,2.94362719f,2.93393068f,2.92466119f,2.91576615f,2.90720289f,2.89893629f,
;265:2.89093699f,2.88318015f,2.87564455f,2.86831188f,2.86116621f,2.85419358f,2.84738169f,2.84071962f,
;266:2.83419760f,2.82780691f,2.82153967f,2.81538876f,2.80934770f,2.80341062f,2.79757211f,2.79182724f,
;267:2.78617145f,2.78060056f,2.77511069f,2.76969824f,2.76435988f,2.75909250f,2.75389319f,2.74875926f,
;268:2.74368816f,2.73867752f,2.73372510f,2.72882880f,2.72398665f,2.71919677f,2.71445741f,2.70976688f,
;269:2.70512362f,2.70052613f,2.69597298f,2.69146283f,2.68699438f,2.68256642f,2.67817778f,2.67382735f,
;270:2.66951407f,2.66523692f,2.66099493f,2.65678719f,2.65261279f,2.64847088f,2.64436066f,2.64028133f,
;271:2.63623214f,2.63221238f,2.62822133f,2.62425835f,2.62032277f,2.61641398f,2.61253138f,2.60867440f,
;272:2.60484248f,2.60103507f,2.59725167f,2.59349176f,2.58975488f,2.58604053f,2.58234828f,2.57867769f,
;273:2.57502832f,2.57139977f,2.56779164f,2.56420354f,2.56063509f,2.55708594f,2.55355572f,2.55004409f,
;274:2.54655073f,2.54307530f,2.53961750f,2.53617701f,2.53275354f,2.52934680f,2.52595650f,2.52258238f,
;275:2.51922417f,2.51588159f,2.51255441f,2.50924238f,2.50594525f,2.50266278f,2.49939476f,2.49614096f,
;276:2.49290115f,2.48967513f,2.48646269f,2.48326362f,2.48007773f,2.47690482f,2.47374472f,2.47059722f,
;277:2.46746215f,2.46433933f,2.46122860f,2.45812977f,2.45504269f,2.45196720f,2.44890314f,2.44585034f,
;278:2.44280867f,2.43977797f,2.43675809f,2.43374890f,2.43075025f,2.42776201f,2.42478404f,2.42181622f,
;279:2.41885841f,2.41591048f,2.41297232f,2.41004380f,2.40712480f,2.40421521f,2.40131491f,2.39842379f,
;280:2.39554173f,2.39266863f,2.38980439f,2.38694889f,2.38410204f,2.38126374f,2.37843388f,2.37561237f,
;281:2.37279910f,2.36999400f,2.36719697f,2.36440790f,2.36162673f,2.35885335f,2.35608768f,2.35332964f,
;282:2.35057914f,2.34783610f,2.34510044f,2.34237208f,2.33965094f,2.33693695f,2.33423003f,2.33153010f,
;283:2.32883709f,2.32615093f,2.32347155f,2.32079888f,2.31813284f,2.31547337f,2.31282041f,2.31017388f,
;284:2.30753373f,2.30489988f,2.30227228f,2.29965086f,2.29703556f,2.29442632f,2.29182309f,2.28922580f,
;285:2.28663439f,2.28404881f,2.28146900f,2.27889490f,2.27632647f,2.27376364f,2.27120637f,2.26865460f,
;286:2.26610827f,2.26356735f,2.26103177f,2.25850149f,2.25597646f,2.25345663f,2.25094195f,2.24843238f,
;287:2.24592786f,2.24342836f,2.24093382f,2.23844420f,2.23595946f,2.23347956f,2.23100444f,2.22853408f,
;288:2.22606842f,2.22360742f,2.22115104f,2.21869925f,2.21625199f,2.21380924f,2.21137096f,2.20893709f,
;289:2.20650761f,2.20408248f,2.20166166f,2.19924511f,2.19683280f,2.19442469f,2.19202074f,2.18962092f,
;290:2.18722520f,2.18483354f,2.18244590f,2.18006225f,2.17768257f,2.17530680f,2.17293493f,2.17056692f,
;291:2.16820274f,2.16584236f,2.16348574f,2.16113285f,2.15878367f,2.15643816f,2.15409630f,2.15175805f,
;292:2.14942338f,2.14709226f,2.14476468f,2.14244059f,2.14011997f,2.13780279f,2.13548903f,2.13317865f,
;293:2.13087163f,2.12856795f,2.12626757f,2.12397047f,2.12167662f,2.11938600f,2.11709859f,2.11481435f,
;294:2.11253326f,2.11025530f,2.10798044f,2.10570867f,2.10343994f,2.10117424f,2.09891156f,2.09665185f,
;295:2.09439510f,2.09214129f,2.08989040f,2.08764239f,2.08539725f,2.08315496f,2.08091550f,2.07867884f,
;296:2.07644495f,2.07421383f,2.07198545f,2.06975978f,2.06753681f,2.06531651f,2.06309887f,2.06088387f,
;297:2.05867147f,2.05646168f,2.05425445f,2.05204979f,2.04984765f,2.04764804f,2.04545092f,2.04325628f,
;298:2.04106409f,2.03887435f,2.03668703f,2.03450211f,2.03231957f,2.03013941f,2.02796159f,2.02578610f,
;299:2.02361292f,2.02144204f,2.01927344f,2.01710710f,2.01494300f,2.01278113f,2.01062146f,2.00846399f,
;300:2.00630870f,2.00415556f,2.00200457f,1.99985570f,1.99770895f,1.99556429f,1.99342171f,1.99128119f,
;301:1.98914271f,1.98700627f,1.98487185f,1.98273942f,1.98060898f,1.97848051f,1.97635399f,1.97422942f,
;302:1.97210676f,1.96998602f,1.96786718f,1.96575021f,1.96363511f,1.96152187f,1.95941046f,1.95730088f,
;303:1.95519310f,1.95308712f,1.95098292f,1.94888050f,1.94677982f,1.94468089f,1.94258368f,1.94048818f,
;304:1.93839439f,1.93630228f,1.93421185f,1.93212308f,1.93003595f,1.92795046f,1.92586659f,1.92378433f,
;305:1.92170367f,1.91962459f,1.91754708f,1.91547113f,1.91339673f,1.91132385f,1.90925250f,1.90718266f,
;306:1.90511432f,1.90304746f,1.90098208f,1.89891815f,1.89685568f,1.89479464f,1.89273503f,1.89067683f,
;307:1.88862003f,1.88656463f,1.88451060f,1.88245794f,1.88040664f,1.87835668f,1.87630806f,1.87426076f,
;308:1.87221477f,1.87017008f,1.86812668f,1.86608457f,1.86404371f,1.86200412f,1.85996577f,1.85792866f,
;309:1.85589277f,1.85385809f,1.85182462f,1.84979234f,1.84776125f,1.84573132f,1.84370256f,1.84167495f,
;310:1.83964848f,1.83762314f,1.83559892f,1.83357582f,1.83155381f,1.82953289f,1.82751305f,1.82549429f,
;311:1.82347658f,1.82145993f,1.81944431f,1.81742973f,1.81541617f,1.81340362f,1.81139207f,1.80938151f,
;312:1.80737194f,1.80536334f,1.80335570f,1.80134902f,1.79934328f,1.79733848f,1.79533460f,1.79333164f,
;313:1.79132959f,1.78932843f,1.78732817f,1.78532878f,1.78333027f,1.78133261f,1.77933581f,1.77733985f,
;314:1.77534473f,1.77335043f,1.77135695f,1.76936428f,1.76737240f,1.76538132f,1.76339101f,1.76140148f,
;315:1.75941271f,1.75742470f,1.75543743f,1.75345090f,1.75146510f,1.74948002f,1.74749565f,1.74551198f,
;316:1.74352900f,1.74154672f,1.73956511f,1.73758417f,1.73560389f,1.73362426f,1.73164527f,1.72966692f,
;317:1.72768920f,1.72571209f,1.72373560f,1.72175971f,1.71978441f,1.71780969f,1.71583556f,1.71386199f,
;318:1.71188899f,1.70991653f,1.70794462f,1.70597325f,1.70400241f,1.70203209f,1.70006228f,1.69809297f,
;319:1.69612416f,1.69415584f,1.69218799f,1.69022062f,1.68825372f,1.68628727f,1.68432127f,1.68235571f,
;320:1.68039058f,1.67842588f,1.67646160f,1.67449772f,1.67253424f,1.67057116f,1.66860847f,1.66664615f,
;321:1.66468420f,1.66272262f,1.66076139f,1.65880050f,1.65683996f,1.65487975f,1.65291986f,1.65096028f,
;322:1.64900102f,1.64704205f,1.64508338f,1.64312500f,1.64116689f,1.63920905f,1.63725148f,1.63529416f,
;323:1.63333709f,1.63138026f,1.62942366f,1.62746728f,1.62551112f,1.62355517f,1.62159943f,1.61964388f,
;324:1.61768851f,1.61573332f,1.61377831f,1.61182346f,1.60986877f,1.60791422f,1.60595982f,1.60400556f,
;325:1.60205142f,1.60009739f,1.59814349f,1.59618968f,1.59423597f,1.59228235f,1.59032882f,1.58837536f,
;326:1.58642196f,1.58446863f,1.58251535f,1.58056211f,1.57860891f,1.57665574f,1.57470259f,1.57274945f,
;327:1.57079633f,1.56884320f,1.56689007f,1.56493692f,1.56298375f,1.56103055f,1.55907731f,1.55712403f,
;328:1.55517069f,1.55321730f,1.55126383f,1.54931030f,1.54735668f,1.54540297f,1.54344917f,1.54149526f,
;329:1.53954124f,1.53758710f,1.53563283f,1.53367843f,1.53172389f,1.52976919f,1.52781434f,1.52585933f,
;330:1.52390414f,1.52194878f,1.51999323f,1.51803748f,1.51608153f,1.51412537f,1.51216900f,1.51021240f,
;331:1.50825556f,1.50629849f,1.50434117f,1.50238360f,1.50042576f,1.49846765f,1.49650927f,1.49455060f,
;332:1.49259163f,1.49063237f,1.48867280f,1.48671291f,1.48475270f,1.48279215f,1.48083127f,1.47887004f,
;333:1.47690845f,1.47494650f,1.47298419f,1.47102149f,1.46905841f,1.46709493f,1.46513106f,1.46316677f,
;334:1.46120207f,1.45923694f,1.45727138f,1.45530538f,1.45333893f,1.45137203f,1.44940466f,1.44743682f,
;335:1.44546850f,1.44349969f,1.44153038f,1.43956057f,1.43759024f,1.43561940f,1.43364803f,1.43167612f,
;336:1.42970367f,1.42773066f,1.42575709f,1.42378296f,1.42180825f,1.41983295f,1.41785705f,1.41588056f,
;337:1.41390346f,1.41192573f,1.40994738f,1.40796840f,1.40598877f,1.40400849f,1.40202755f,1.40004594f,
;338:1.39806365f,1.39608068f,1.39409701f,1.39211264f,1.39012756f,1.38814175f,1.38615522f,1.38416795f,
;339:1.38217994f,1.38019117f,1.37820164f,1.37621134f,1.37422025f,1.37222837f,1.37023570f,1.36824222f,
;340:1.36624792f,1.36425280f,1.36225684f,1.36026004f,1.35826239f,1.35626387f,1.35426449f,1.35226422f,
;341:1.35026307f,1.34826101f,1.34625805f,1.34425418f,1.34224937f,1.34024364f,1.33823695f,1.33622932f,
;342:1.33422072f,1.33221114f,1.33020059f,1.32818904f,1.32617649f,1.32416292f,1.32214834f,1.32013273f,
;343:1.31811607f,1.31609837f,1.31407960f,1.31205976f,1.31003885f,1.30801684f,1.30599373f,1.30396951f,
;344:1.30194417f,1.29991770f,1.29789009f,1.29586133f,1.29383141f,1.29180031f,1.28976803f,1.28773456f,
;345:1.28569989f,1.28366400f,1.28162688f,1.27958854f,1.27754894f,1.27550809f,1.27346597f,1.27142257f,
;346:1.26937788f,1.26733189f,1.26528459f,1.26323597f,1.26118602f,1.25913471f,1.25708205f,1.25502803f,
;347:1.25297262f,1.25091583f,1.24885763f,1.24679802f,1.24473698f,1.24267450f,1.24061058f,1.23854519f,
;348:1.23647833f,1.23440999f,1.23234015f,1.23026880f,1.22819593f,1.22612152f,1.22404557f,1.22196806f,
;349:1.21988898f,1.21780832f,1.21572606f,1.21364219f,1.21155670f,1.20946958f,1.20738080f,1.20529037f,
;350:1.20319826f,1.20110447f,1.19900898f,1.19691177f,1.19481283f,1.19271216f,1.19060973f,1.18850553f,
;351:1.18639955f,1.18429178f,1.18218219f,1.18007079f,1.17795754f,1.17584244f,1.17372548f,1.17160663f,
;352:1.16948589f,1.16736324f,1.16523866f,1.16311215f,1.16098368f,1.15885323f,1.15672081f,1.15458638f,
;353:1.15244994f,1.15031147f,1.14817095f,1.14602836f,1.14388370f,1.14173695f,1.13958808f,1.13743709f,
;354:1.13528396f,1.13312866f,1.13097119f,1.12881153f,1.12664966f,1.12448556f,1.12231921f,1.12015061f,
;355:1.11797973f,1.11580656f,1.11363107f,1.11145325f,1.10927308f,1.10709055f,1.10490563f,1.10271831f,
;356:1.10052856f,1.09833638f,1.09614174f,1.09394462f,1.09174500f,1.08954287f,1.08733820f,1.08513098f,
;357:1.08292118f,1.08070879f,1.07849378f,1.07627614f,1.07405585f,1.07183287f,1.06960721f,1.06737882f,
;358:1.06514770f,1.06291382f,1.06067715f,1.05843769f,1.05619540f,1.05395026f,1.05170226f,1.04945136f,
;359:1.04719755f,1.04494080f,1.04268110f,1.04041841f,1.03815271f,1.03588399f,1.03361221f,1.03133735f,
;360:1.02905939f,1.02677830f,1.02449407f,1.02220665f,1.01991603f,1.01762219f,1.01532509f,1.01302471f,
;361:1.01072102f,1.00841400f,1.00610363f,1.00378986f,1.00147268f,0.99915206f,0.99682798f,0.99450039f,
;362:0.99216928f,0.98983461f,0.98749636f,0.98515449f,0.98280898f,0.98045980f,0.97810691f,0.97575030f,
;363:0.97338991f,0.97102573f,0.96865772f,0.96628585f,0.96391009f,0.96153040f,0.95914675f,0.95675912f,
;364:0.95436745f,0.95197173f,0.94957191f,0.94716796f,0.94475985f,0.94234754f,0.93993099f,0.93751017f,
;365:0.93508504f,0.93265556f,0.93022170f,0.92778341f,0.92534066f,0.92289341f,0.92044161f,0.91798524f,
;366:0.91552424f,0.91305858f,0.91058821f,0.90811309f,0.90563319f,0.90314845f,0.90065884f,0.89816430f,
;367:0.89566479f,0.89316028f,0.89065070f,0.88813602f,0.88561619f,0.88309116f,0.88056088f,0.87802531f,
;368:0.87548438f,0.87293806f,0.87038629f,0.86782901f,0.86526619f,0.86269775f,0.86012366f,0.85754385f,
;369:0.85495827f,0.85236686f,0.84976956f,0.84716633f,0.84455709f,0.84194179f,0.83932037f,0.83669277f,
;370:0.83405893f,0.83141877f,0.82877225f,0.82611928f,0.82345981f,0.82079378f,0.81812110f,0.81544172f,
;371:0.81275556f,0.81006255f,0.80736262f,0.80465570f,0.80194171f,0.79922057f,0.79649221f,0.79375655f,
;372:0.79101352f,0.78826302f,0.78550497f,0.78273931f,0.77996593f,0.77718475f,0.77439569f,0.77159865f,
;373:0.76879355f,0.76598029f,0.76315878f,0.76032891f,0.75749061f,0.75464376f,0.75178826f,0.74892402f,
;374:0.74605092f,0.74316887f,0.74027775f,0.73737744f,0.73446785f,0.73154885f,0.72862033f,0.72568217f,
;375:0.72273425f,0.71977644f,0.71680861f,0.71383064f,0.71084240f,0.70784376f,0.70483456f,0.70181469f,
;376:0.69878398f,0.69574231f,0.69268952f,0.68962545f,0.68654996f,0.68346288f,0.68036406f,0.67725332f,
;377:0.67413051f,0.67099544f,0.66784794f,0.66468783f,0.66151492f,0.65832903f,0.65512997f,0.65191753f,
;378:0.64869151f,0.64545170f,0.64219789f,0.63892987f,0.63564741f,0.63235028f,0.62903824f,0.62571106f,
;379:0.62236849f,0.61901027f,0.61563615f,0.61224585f,0.60883911f,0.60541564f,0.60197515f,0.59851735f,
;380:0.59504192f,0.59154856f,0.58803694f,0.58450672f,0.58095756f,0.57738911f,0.57380101f,0.57019288f,
;381:0.56656433f,0.56291496f,0.55924437f,0.55555212f,0.55183778f,0.54810089f,0.54434099f,0.54055758f,
;382:0.53675018f,0.53291825f,0.52906127f,0.52517867f,0.52126988f,0.51733431f,0.51337132f,0.50938028f,
;383:0.50536051f,0.50131132f,0.49723200f,0.49312177f,0.48897987f,0.48480547f,0.48059772f,0.47635573f,
;384:0.47207859f,0.46776530f,0.46341487f,0.45902623f,0.45459827f,0.45012983f,0.44561967f,0.44106652f,
;385:0.43646903f,0.43182577f,0.42713525f,0.42239588f,0.41760600f,0.41276385f,0.40786755f,0.40291513f,
;386:0.39790449f,0.39283339f,0.38769946f,0.38250016f,0.37723277f,0.37189441f,0.36648196f,0.36099209f,
;387:0.35542120f,0.34976542f,0.34402054f,0.33818204f,0.33224495f,0.32620390f,0.32005298f,0.31378574f,
;388:0.30739505f,0.30087304f,0.29421096f,0.28739907f,0.28042645f,0.27328078f,0.26594810f,0.25841250f,
;389:0.25065566f,0.24265636f,0.23438976f,0.22582651f,0.21693146f,0.20766198f,0.19796546f,0.18777575f,
;390:0.17700769f,0.16554844f,0.15324301f,0.13986823f,0.12508152f,0.10830610f,0.08841715f,0.06251018f,
;391:0.0f
;392:};
;393:
;394:float G_acos(float x) {
line 397
;395:	int index;
;396:
;397:	if (x < -1.0f) x = -1.0f;
ADDRFP4 0
INDIRF4
CNSTF4 3212836864
GEF4 $192
ADDRFP4 0
CNSTF4 3212836864
ASGNF4
ADDRGP4 $193
JUMPV
LABELV $192
line 398
;398:	else if (x > 1.0f) x = 1.0f;
ADDRFP4 0
INDIRF4
CNSTF4 1065353216
LEF4 $194
ADDRFP4 0
CNSTF4 1065353216
ASGNF4
LABELV $194
LABELV $193
line 399
;399:	index = (1.0f + x) * 512.0f;
ADDRLP4 0
ADDRFP4 0
INDIRF4
CNSTF4 1065353216
ADDF4
CNSTF4 1140850688
MULF4
CVFI4 4
ASGNI4
line 400
;400:	return acostable[index];
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 acostable
ADDP4
INDIRF4
RETF4
LABELV $191
endproc G_acos 4 0
bss
align 4
LABELV $197
skip 4
align 4
LABELV $198
skip 96
export tv
code
proc tv 8 0
line 413
;401:}
;402:#endif
;403:
;404:
;405:/*
;406:=============
;407:TempVector
;408:
;409:This is just a convenience function
;410:for making temporary vectors for function calls
;411:=============
;412:*/
;413:float	*tv( float x, float y, float z ) {
line 420
;414:	static	int		index;
;415:	static	vec3_t	vecs[8];
;416:	float	*v;
;417:
;418:	// use an array so that multiple tempvectors won't collide
;419:	// for a while
;420:	v = vecs[index];
ADDRLP4 0
ADDRGP4 $197
INDIRI4
CNSTI4 12
MULI4
ADDRGP4 $198
ADDP4
ASGNP4
line 421
;421:	index = (index + 1)&7;
ADDRLP4 4
ADDRGP4 $197
ASGNP4
ADDRLP4 4
INDIRP4
ADDRLP4 4
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
CNSTI4 7
BANDI4
ASGNI4
line 423
;422:
;423:	v[0] = x;
ADDRLP4 0
INDIRP4
ADDRFP4 0
INDIRF4
ASGNF4
line 424
;424:	v[1] = y;
ADDRLP4 0
INDIRP4
CNSTI4 4
ADDP4
ADDRFP4 4
INDIRF4
ASGNF4
line 425
;425:	v[2] = z;
ADDRLP4 0
INDIRP4
CNSTI4 8
ADDP4
ADDRFP4 8
INDIRF4
ASGNF4
line 427
;426:
;427:	return v;
ADDRLP4 0
INDIRP4
RETP4
LABELV $196
endproc tv 8 0
bss
align 4
LABELV $200
skip 4
align 1
LABELV $201
skip 256
export vtos
code
proc vtos 12 24
line 439
;428:}
;429:
;430:
;431:/*
;432:=============
;433:VectorToString
;434:
;435:This is just a convenience function
;436:for printing vectors
;437:=============
;438:*/
;439:char	*vtos( const vec3_t v ) {
line 445
;440:	static	int		index;
;441:	static	char	str[8][32];
;442:	char	*s;
;443:
;444:	// use an array so that multiple vtos won't collide
;445:	s = str[index];
ADDRLP4 0
ADDRGP4 $200
INDIRI4
CNSTI4 5
LSHI4
ADDRGP4 $201
ADDP4
ASGNP4
line 446
;446:	index = (index + 1)&7;
ADDRLP4 4
ADDRGP4 $200
ASGNP4
ADDRLP4 4
INDIRP4
ADDRLP4 4
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
CNSTI4 7
BANDI4
ASGNI4
line 448
;447:
;448:	Com_sprintf (s, 32, "(%i %i %i)", (int)v[0], (int)v[1], (int)v[2]);
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 32
ARGI4
ADDRGP4 $202
ARGP4
ADDRLP4 8
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 8
INDIRP4
INDIRF4
CVFI4 4
ARGI4
ADDRLP4 8
INDIRP4
CNSTI4 4
ADDP4
INDIRF4
CVFI4 4
ARGI4
ADDRLP4 8
INDIRP4
CNSTI4 8
ADDP4
INDIRF4
CVFI4 4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 450
;449:
;450:	return s;
ADDRLP4 0
INDIRP4
RETP4
LABELV $199
endproc vtos 12 24
data
align 4
LABELV $204
byte 4 0
byte 4 3212836864
byte 4 0
align 4
LABELV $205
byte 4 0
byte 4 0
byte 4 1065353216
align 4
LABELV $206
byte 4 0
byte 4 3221225472
byte 4 0
align 4
LABELV $207
byte 4 0
byte 4 0
byte 4 3212836864
export G_SetMovedir
code
proc G_SetMovedir 16 16
line 464
;451:}
;452:
;453:
;454:/*
;455:===============
;456:G_SetMovedir
;457:
;458:The editor only specifies a single value for angles (yaw),
;459:but we have special constants to generate an up or down direction.
;460:Angles will be cleared, because it is being used to represent a direction
;461:instead of an orientation.
;462:===============
;463:*/
;464:void G_SetMovedir( vec3_t angles, vec3_t movedir ) {
line 470
;465:	static vec3_t VEC_UP		= {0, -1, 0};
;466:	static vec3_t MOVEDIR_UP	= {0, 0, 1};
;467:	static vec3_t VEC_DOWN		= {0, -2, 0};
;468:	static vec3_t MOVEDIR_DOWN	= {0, 0, -1};
;469:
;470:	if ( VectorCompare (angles, VEC_UP) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 $204
ARGP4
ADDRLP4 0
ADDRGP4 VectorCompare
CALLI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 0
EQI4 $208
line 471
;471:		VectorCopy (MOVEDIR_UP, movedir);
ADDRFP4 4
INDIRP4
ADDRGP4 $205
INDIRB
ASGNB 12
line 472
;472:	} else if ( VectorCompare (angles, VEC_DOWN) ) {
ADDRGP4 $209
JUMPV
LABELV $208
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 $206
ARGP4
ADDRLP4 4
ADDRGP4 VectorCompare
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 0
EQI4 $210
line 473
;473:		VectorCopy (MOVEDIR_DOWN, movedir);
ADDRFP4 4
INDIRP4
ADDRGP4 $207
INDIRB
ASGNB 12
line 474
;474:	} else {
ADDRGP4 $211
JUMPV
LABELV $210
line 475
;475:		AngleVectors (angles, movedir, NULL, NULL);
ADDRFP4 0
INDIRP4
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
CNSTP4 0
ARGP4
CNSTP4 0
ARGP4
ADDRGP4 AngleVectors
CALLV
pop
line 476
;476:	}
LABELV $211
LABELV $209
line 477
;477:	VectorClear( angles );
ADDRLP4 8
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 12
CNSTF4 0
ASGNF4
ADDRLP4 8
INDIRP4
CNSTI4 8
ADDP4
ADDRLP4 12
INDIRF4
ASGNF4
ADDRLP4 8
INDIRP4
CNSTI4 4
ADDP4
ADDRLP4 12
INDIRF4
ASGNF4
ADDRLP4 8
INDIRP4
ADDRLP4 12
INDIRF4
ASGNF4
line 478
;478:}
LABELV $203
endproc G_SetMovedir 16 16
export vectoyaw
proc vectoyaw 16 8
line 481
;479:
;480:
;481:float vectoyaw( const vec3_t vec ) {
line 484
;482:	float	yaw;
;483:	
;484:	if (vec[YAW] == 0 && vec[PITCH] == 0) {
ADDRLP4 4
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 4
INDIRP4
CNSTI4 4
ADDP4
INDIRF4
CNSTF4 0
NEF4 $213
ADDRLP4 4
INDIRP4
INDIRF4
CNSTF4 0
NEF4 $213
line 485
;485:		yaw = 0;
ADDRLP4 0
CNSTF4 0
ASGNF4
line 486
;486:	} else {
ADDRGP4 $214
JUMPV
LABELV $213
line 487
;487:		if (vec[PITCH]) {
ADDRFP4 0
INDIRP4
INDIRF4
CNSTF4 0
EQF4 $215
line 488
;488:			yaw = ( atan2( vec[YAW], vec[PITCH]) * 180 / M_PI );
ADDRLP4 8
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 8
INDIRP4
CNSTI4 4
ADDP4
INDIRF4
ARGF4
ADDRLP4 8
INDIRP4
INDIRF4
ARGF4
ADDRLP4 12
ADDRGP4 atan2
CALLF4
ASGNF4
ADDRLP4 0
ADDRLP4 12
INDIRF4
CNSTF4 1113927393
MULF4
ASGNF4
line 489
;489:		} else if (vec[YAW] > 0) {
ADDRGP4 $216
JUMPV
LABELV $215
ADDRFP4 0
INDIRP4
CNSTI4 4
ADDP4
INDIRF4
CNSTF4 0
LEF4 $217
line 490
;490:			yaw = 90;
ADDRLP4 0
CNSTF4 1119092736
ASGNF4
line 491
;491:		} else {
ADDRGP4 $218
JUMPV
LABELV $217
line 492
;492:			yaw = 270;
ADDRLP4 0
CNSTF4 1132920832
ASGNF4
line 493
;493:		}
LABELV $218
LABELV $216
line 494
;494:		if (yaw < 0) {
ADDRLP4 0
INDIRF4
CNSTF4 0
GEF4 $219
line 495
;495:			yaw += 360;
ADDRLP4 0
ADDRLP4 0
INDIRF4
CNSTF4 1135869952
ADDF4
ASGNF4
line 496
;496:		}
LABELV $219
line 497
;497:	}
LABELV $214
line 499
;498:
;499:	return yaw;
ADDRLP4 0
INDIRF4
RETF4
LABELV $212
endproc vectoyaw 16 8
export G_InitGentity
proc G_InitGentity 4 0
line 505
;500:}
;501:
;502:
;503:static int numUsedEntities;	// JUHOX
;504:
;505:void G_InitGentity( gentity_t *e ) {
line 506
;506:	e->inuse = qtrue;
ADDRFP4 0
INDIRP4
CNSTI4 524
ADDP4
CNSTI4 1
ASGNI4
line 507
;507:	e->classname = "noclass";
ADDRFP4 0
INDIRP4
CNSTI4 528
ADDP4
ADDRGP4 $222
ASGNP4
line 508
;508:	e->s.number = e - g_entities;
ADDRLP4 0
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 0
INDIRP4
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 844
DIVI4
ASGNI4
line 509
;509:	e->r.ownerNum = ENTITYNUM_NONE;
ADDRFP4 0
INDIRP4
CNSTI4 512
ADDP4
CNSTI4 1023
ASGNI4
line 510
;510:}
LABELV $221
endproc G_InitGentity 4 0
export G_Spawn
proc G_Spawn 20 20
line 527
;511:
;512:/*
;513:=================
;514:G_Spawn
;515:
;516:Either finds a free entity, or allocates a new one.
;517:
;518:  The slots from 0 to MAX_CLIENTS-1 are always reserved for clients, and will
;519:never be used by anything else.
;520:
;521:Try to avoid reusing an entity that was recently freed, because it
;522:can cause the client to think the entity morphed into something else
;523:instead of being removed and recreated, which can cause interpolated
;524:angles and bad trails.
;525:=================
;526:*/
;527:gentity_t *G_Spawn( void ) {
line 531
;528:	int			i, force;
;529:	gentity_t	*e;
;530:
;531:	if (numUsedEntities < MAX_CLIENTS) numUsedEntities = MAX_CLIENTS;	// JUHOX
ADDRGP4 numUsedEntities
INDIRI4
CNSTI4 64
GEI4 $224
ADDRGP4 numUsedEntities
CNSTI4 64
ASGNI4
LABELV $224
line 532
;532:	e = NULL;	// shut up warning
ADDRLP4 0
CNSTP4 0
ASGNP4
line 533
;533:	i = 0;		// shut up warning
ADDRLP4 4
CNSTI4 0
ASGNI4
line 534
;534:	for ( force = 0 ; force < 2 ; force++ ) {
ADDRLP4 8
CNSTI4 0
ASGNI4
LABELV $226
line 537
;535:		// if we go through all entities and can't find one to free,
;536:		// override the normal minimum times before use
;537:		e = &g_entities[MAX_CLIENTS];
ADDRLP4 0
ADDRGP4 g_entities+54016
ASGNP4
line 538
;538:		for ( i = MAX_CLIENTS ; i<level.num_entities ; i++, e++) {
ADDRLP4 4
CNSTI4 64
ASGNI4
ADDRGP4 $234
JUMPV
LABELV $231
line 539
;539:			if ( e->inuse ) {
ADDRLP4 0
INDIRP4
CNSTI4 524
ADDP4
INDIRI4
CNSTI4 0
EQI4 $236
line 540
;540:				continue;
ADDRGP4 $232
JUMPV
LABELV $236
line 545
;541:			}
;542:
;543:			// the first couple seconds of server time can involve a lot of
;544:			// freeing and allocating, so relax the replacement policy
;545:			if ( !force && e->freetime > level.startTime + 2000 && level.time - e->freetime < 1000 ) {
ADDRLP4 8
INDIRI4
CNSTI4 0
NEI4 $238
ADDRLP4 0
INDIRP4
CNSTI4 552
ADDP4
INDIRI4
ADDRGP4 level+40
INDIRI4
CNSTI4 2000
ADDI4
LEI4 $238
ADDRGP4 level+32
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 552
ADDP4
INDIRI4
SUBI4
CNSTI4 1000
GEI4 $238
line 546
;546:				continue;
ADDRGP4 $232
JUMPV
LABELV $238
line 550
;547:			}
;548:
;549:			// reuse this slot
;550:			G_InitGentity( e );
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 G_InitGentity
CALLV
pop
line 551
;551:			numUsedEntities++;	// JUHOX
ADDRLP4 16
ADDRGP4 numUsedEntities
ASGNP4
ADDRLP4 16
INDIRP4
ADDRLP4 16
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 552
;552:			return e;
ADDRLP4 0
INDIRP4
RETP4
ADDRGP4 $223
JUMPV
LABELV $232
line 538
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
ADDRLP4 0
INDIRP4
CNSTI4 844
ADDP4
ASGNP4
LABELV $234
ADDRLP4 4
INDIRI4
ADDRGP4 level+12
INDIRI4
LTI4 $231
line 554
;553:		}
;554:		if ( i /*!= MAX_GENTITIES*/<ENTITYNUM_MAX_NORMAL ) {	// JUHOX BUGFIX
ADDRLP4 4
INDIRI4
CNSTI4 1022
GEI4 $242
line 555
;555:			break;
ADDRGP4 $228
JUMPV
LABELV $242
line 557
;556:		}
;557:	}
LABELV $227
line 534
ADDRLP4 8
ADDRLP4 8
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 8
INDIRI4
CNSTI4 2
LTI4 $226
LABELV $228
line 558
;558:	if ( i == ENTITYNUM_MAX_NORMAL ) {
ADDRLP4 4
INDIRI4
CNSTI4 1022
NEI4 $244
line 559
;559:		for (i = 0; i < MAX_GENTITIES; i++) {
ADDRLP4 4
CNSTI4 0
ASGNI4
LABELV $246
line 560
;560:			G_Printf("%4i: %s\n", i, g_entities[i].classname);
ADDRGP4 $250
ARGP4
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 4
INDIRI4
CNSTI4 844
MULI4
ADDRGP4 g_entities+528
ADDP4
INDIRP4
ARGP4
ADDRGP4 G_Printf
CALLV
pop
line 561
;561:		}
LABELV $247
line 559
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 1024
LTI4 $246
line 562
;562:		G_Error( "G_Spawn: no free entities" );
ADDRGP4 $252
ARGP4
ADDRGP4 G_Error
CALLV
pop
line 563
;563:		return NULL;	// JUHOX BUGFIX
CNSTP4 0
RETP4
ADDRGP4 $223
JUMPV
LABELV $244
line 567
;564:	}
;565:	
;566:	// open up a new slot
;567:	level.num_entities++;
ADDRLP4 12
ADDRGP4 level+12
ASGNP4
ADDRLP4 12
INDIRP4
ADDRLP4 12
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 570
;568:
;569:	// let the server system know that there are more entities
;570:	trap_LocateGameData( level.gentities, level.num_entities, sizeof( gentity_t ), 
ADDRGP4 level+4
INDIRP4
ARGP4
ADDRGP4 level+12
INDIRI4
ARGI4
CNSTI4 844
ARGI4
ADDRGP4 level
INDIRP4
ARGP4
CNSTI4 5604
ARGI4
ADDRGP4 trap_LocateGameData
CALLV
pop
line 573
;571:		&level.clients[0].ps, sizeof( level.clients[0] ) );
;572:
;573:	G_InitGentity( e );
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 G_InitGentity
CALLV
pop
line 574
;574:	numUsedEntities++;	// JUHOX
ADDRLP4 16
ADDRGP4 numUsedEntities
ASGNP4
ADDRLP4 16
INDIRP4
ADDRLP4 16
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 575
;575:	return e;
ADDRLP4 0
INDIRP4
RETP4
LABELV $223
endproc G_Spawn 20 20
export G_EntitiesFree
proc G_EntitiesFree 8 0
line 583
;576:}
;577:
;578:/*
;579:=================
;580:G_EntitiesFree
;581:=================
;582:*/
;583:qboolean G_EntitiesFree( void ) {
line 587
;584:	int			i;
;585:	gentity_t	*e;
;586:
;587:	e = &g_entities[MAX_CLIENTS];
ADDRLP4 4
ADDRGP4 g_entities+54016
ASGNP4
line 588
;588:	for ( i = MAX_CLIENTS; i < level.num_entities; i++, e++) {
ADDRLP4 0
CNSTI4 64
ASGNI4
ADDRGP4 $261
JUMPV
LABELV $258
line 589
;589:		if ( e->inuse ) {
ADDRLP4 4
INDIRP4
CNSTI4 524
ADDP4
INDIRI4
CNSTI4 0
EQI4 $263
line 590
;590:			continue;
ADDRGP4 $259
JUMPV
LABELV $263
line 593
;591:		}
;592:		// slot available
;593:		return qtrue;
CNSTI4 1
RETI4
ADDRGP4 $256
JUMPV
LABELV $259
line 588
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 4
ADDRLP4 4
INDIRP4
CNSTI4 844
ADDP4
ASGNP4
LABELV $261
ADDRLP4 0
INDIRI4
ADDRGP4 level+12
INDIRI4
LTI4 $258
line 595
;594:	}
;595:	return qfalse;
CNSTI4 0
RETI4
LABELV $256
endproc G_EntitiesFree 8 0
export G_NumEntitiesFree
proc G_NumEntitiesFree 0 0
line 603
;596:}
;597:
;598:/*
;599:=================
;600:JUHOX G_NumEntitiesFree
;601:=================
;602:*/
;603:int G_NumEntitiesFree(void) {
line 604
;604:	return ENTITYNUM_MAX_NORMAL - numUsedEntities;
CNSTI4 1022
ADDRGP4 numUsedEntities
INDIRI4
SUBI4
RETI4
LABELV $265
endproc G_NumEntitiesFree 0 0
export G_FreeEntity
proc G_FreeEntity 4 12
line 614
;605:}
;606:
;607:/*
;608:=================
;609:G_FreeEntity
;610:
;611:Marks the entity as free
;612:=================
;613:*/
;614:void G_FreeEntity( gentity_t *ed ) {
line 615
;615:	trap_UnlinkEntity (ed);		// unlink from world
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 trap_UnlinkEntity
CALLV
pop
line 617
;616:
;617:	if ( ed->neverFree ) {
ADDRFP4 0
INDIRP4
CNSTI4 536
ADDP4
INDIRI4
CNSTI4 0
EQI4 $267
line 618
;618:		return;
ADDRGP4 $266
JUMPV
LABELV $267
line 621
;619:	}
;620:
;621:	memset (ed, 0, sizeof(*ed));
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 0
ARGI4
CNSTI4 844
ARGI4
ADDRGP4 memset
CALLP4
pop
line 622
;622:	ed->classname = "freed";
ADDRFP4 0
INDIRP4
CNSTI4 528
ADDP4
ADDRGP4 $269
ASGNP4
line 623
;623:	ed->freetime = level.time;
ADDRFP4 0
INDIRP4
CNSTI4 552
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 624
;624:	ed->inuse = qfalse;
ADDRFP4 0
INDIRP4
CNSTI4 524
ADDP4
CNSTI4 0
ASGNI4
line 625
;625:	numUsedEntities--;	// JUHOX
ADDRLP4 0
ADDRGP4 numUsedEntities
ASGNP4
ADDRLP4 0
INDIRP4
ADDRLP4 0
INDIRP4
INDIRI4
CNSTI4 1
SUBI4
ASGNI4
line 626
;626:}
LABELV $266
endproc G_FreeEntity 4 12
export G_TempEntity
proc G_TempEntity 20 8
line 641
;627:
;628:/*
;629:=================
;630:G_TempEntity
;631:
;632:Spawns an event entity that will be auto-removed
;633:The origin will be snapped to save net bandwidth, so care
;634:must be taken if the origin is right on a surface (snap towards start vector first)
;635:=================
;636:*/
;637:// JUHOX BUGFIX: add 'const' to G_TempEntity() parm 'origin'
;638:#if 0
;639:gentity_t *G_TempEntity( vec3_t origin, int event ) {
;640:#else
;641:gentity_t *G_TempEntity(const vec3_t origin, int event) {
line 646
;642:#endif
;643:	gentity_t		*e;
;644:	vec3_t		snapped;
;645:
;646:	e = G_Spawn();
ADDRLP4 16
ADDRGP4 G_Spawn
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 16
INDIRP4
ASGNP4
line 647
;647:	if (!e) return NULL;	// JUHOX BUGFIX
ADDRLP4 0
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $272
CNSTP4 0
RETP4
ADDRGP4 $271
JUMPV
LABELV $272
line 648
;648:	e->s.eType = ET_EVENTS + event;
ADDRLP4 0
INDIRP4
CNSTI4 4
ADDP4
ADDRFP4 4
INDIRI4
CNSTI4 14
ADDI4
ASGNI4
line 650
;649:
;650:	e->classname = "tempEntity";
ADDRLP4 0
INDIRP4
CNSTI4 528
ADDP4
ADDRGP4 $274
ASGNP4
line 651
;651:	e->eventTime = level.time;
ADDRLP4 0
INDIRP4
CNSTI4 556
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 652
;652:	e->freeAfterEvent = qtrue;
ADDRLP4 0
INDIRP4
CNSTI4 560
ADDP4
CNSTI4 1
ASGNI4
line 654
;653:
;654:	VectorCopy( origin, snapped );
ADDRLP4 4
ADDRFP4 0
INDIRP4
INDIRB
ASGNB 12
line 655
;655:	SnapVector( snapped );		// save network bandwidth
ADDRLP4 4
ADDRLP4 4
INDIRF4
CVFI4 4
CVIF4 4
ASGNF4
ADDRLP4 4+4
ADDRLP4 4+4
INDIRF4
CVFI4 4
CVIF4 4
ASGNF4
ADDRLP4 4+8
ADDRLP4 4+8
INDIRF4
CVFI4 4
CVIF4 4
ASGNF4
line 656
;656:	G_SetOrigin( e, snapped );
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 4
ARGP4
ADDRGP4 G_SetOrigin
CALLV
pop
line 659
;657:
;658:	// find cluster for PVS
;659:	trap_LinkEntity( e );
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 trap_LinkEntity
CALLV
pop
line 661
;660:
;661:	return e;
ADDRLP4 0
INDIRP4
RETP4
LABELV $271
endproc G_TempEntity 20 8
export G_KillBox
proc G_KillBox 4156 32
line 682
;662:}
;663:
;664:
;665:
;666:/*
;667:==============================================================================
;668:
;669:Kill box
;670:
;671:==============================================================================
;672:*/
;673:
;674:/*
;675:=================
;676:G_KillBox
;677:
;678:Kills all entities that would touch the proposed new positioning
;679:of ent.  Ent should be unlinked before calling this!
;680:=================
;681:*/
;682:void G_KillBox (gentity_t *ent) {
line 688
;683:	int			i, num;
;684:	int			touch[MAX_GENTITIES];
;685:	gentity_t	*hit;
;686:	vec3_t		mins, maxs;
;687:
;688:	VectorAdd( ent->client->ps.origin, ent->r.mins, mins );
ADDRLP4 4132
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 4108
ADDRLP4 4132
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 20
ADDP4
INDIRF4
ADDRLP4 4132
INDIRP4
CNSTI4 436
ADDP4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 4108+4
ADDRLP4 4132
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 24
ADDP4
INDIRF4
ADDRLP4 4132
INDIRP4
CNSTI4 440
ADDP4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 4136
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 4108+8
ADDRLP4 4136
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 28
ADDP4
INDIRF4
ADDRLP4 4136
INDIRP4
CNSTI4 444
ADDP4
INDIRF4
ADDF4
ASGNF4
line 689
;689:	VectorAdd( ent->client->ps.origin, ent->r.maxs, maxs );
ADDRLP4 4140
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 4120
ADDRLP4 4140
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 20
ADDP4
INDIRF4
ADDRLP4 4140
INDIRP4
CNSTI4 448
ADDP4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 4120+4
ADDRLP4 4140
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 24
ADDP4
INDIRF4
ADDRLP4 4140
INDIRP4
CNSTI4 452
ADDP4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 4144
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 4120+8
ADDRLP4 4144
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 28
ADDP4
INDIRF4
ADDRLP4 4144
INDIRP4
CNSTI4 456
ADDP4
INDIRF4
ADDF4
ASGNF4
line 690
;690:	num = trap_EntitiesInBox( mins, maxs, touch, MAX_GENTITIES );
ADDRLP4 4108
ARGP4
ADDRLP4 4120
ARGP4
ADDRLP4 12
ARGP4
CNSTI4 1024
ARGI4
ADDRLP4 4148
ADDRGP4 trap_EntitiesInBox
CALLI4
ASGNI4
ADDRLP4 8
ADDRLP4 4148
INDIRI4
ASGNI4
line 692
;691:
;692:	for (i=0 ; i<num ; i++) {
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRGP4 $288
JUMPV
LABELV $285
line 693
;693:		hit = &g_entities[touch[i]];
ADDRLP4 0
ADDRLP4 4
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 12
ADDP4
INDIRI4
CNSTI4 844
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 700
;694:		// JUHOX: let G_KillBox kill monster, too
;695:#if !MONSTER_MODE
;696:		if ( !hit->client ) {
;697:			continue;
;698:		}
;699:#else
;700:		if (hit->s.eType != ET_PLAYER) continue;
ADDRLP4 0
INDIRP4
CNSTI4 4
ADDP4
INDIRI4
CNSTI4 1
EQI4 $289
ADDRGP4 $286
JUMPV
LABELV $289
line 702
;701:#endif
;702:		if (hit->health <= 0) continue;	// JUHOX
ADDRLP4 0
INDIRP4
CNSTI4 736
ADDP4
INDIRI4
CNSTI4 0
GTI4 $291
ADDRGP4 $286
JUMPV
LABELV $291
line 706
;703:
;704:		// JUHOX: don't let the entity kill itself
;705:#if 1
;706:		if (hit == ent) continue;	// why didn't they check this?
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRFP4 0
INDIRP4
CVPU4 4
NEU4 $293
ADDRGP4 $286
JUMPV
LABELV $293
line 710
;707:#endif
;708:
;709:		// nail it
;710:		G_Damage ( hit, ent, ent, NULL, NULL,
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 4152
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 4152
INDIRP4
ARGP4
ADDRLP4 4152
INDIRP4
ARGP4
CNSTP4 0
ARGP4
CNSTP4 0
ARGP4
CNSTI4 100000
ARGI4
CNSTI4 8
ARGI4
CNSTI4 23
ARGI4
ADDRGP4 G_Damage
CALLV
pop
line 712
;711:			100000, DAMAGE_NO_PROTECTION, MOD_TELEFRAG);
;712:	}
LABELV $286
line 692
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $288
ADDRLP4 4
INDIRI4
ADDRLP4 8
INDIRI4
LTI4 $285
line 714
;713:
;714:}
LABELV $280
endproc G_KillBox 4156 32
export G_AddPredictableEvent
proc G_AddPredictableEvent 0 12
line 727
;715:
;716://==============================================================================
;717:
;718:/*
;719:===============
;720:G_AddPredictableEvent
;721:
;722:Use for non-pmove events that would also be predicted on the
;723:client side: jumppads and item pickups
;724:Adds an event+parm and twiddles the event counter
;725:===============
;726:*/
;727:void G_AddPredictableEvent( gentity_t *ent, int event, int eventParm ) {
line 728
;728:	if ( !ent->client ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $296
line 729
;729:		return;
ADDRGP4 $295
JUMPV
LABELV $296
line 731
;730:	}
;731:	BG_AddPredictableEventToPlayerstate( event, eventParm, &ent->client->ps );
ADDRFP4 4
INDIRI4
ARGI4
ADDRFP4 8
INDIRI4
ARGI4
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
ARGP4
ADDRGP4 BG_AddPredictableEventToPlayerstate
CALLV
pop
line 732
;732:}
LABELV $295
endproc G_AddPredictableEvent 0 12
export G_AddEvent
proc G_AddEvent 4 8
line 742
;733:
;734:
;735:/*
;736:===============
;737:G_AddEvent
;738:
;739:Adds an event+parm and twiddles the event counter
;740:===============
;741:*/
;742:void G_AddEvent( gentity_t *ent, int event, int eventParm ) {
line 745
;743:	int		bits;
;744:
;745:	if ( !event ) {
ADDRFP4 4
INDIRI4
CNSTI4 0
NEI4 $299
line 746
;746:		G_Printf( "G_AddEvent: zero event added for entity %i\n", ent->s.number );
ADDRGP4 $301
ARGP4
ADDRFP4 0
INDIRP4
INDIRI4
ARGI4
ADDRGP4 G_Printf
CALLV
pop
line 747
;747:		return;
ADDRGP4 $298
JUMPV
LABELV $299
line 751
;748:	}
;749:
;750:	// clients need to add the event in playerState_t instead of entityState_t
;751:	if ( ent->client ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $302
line 752
;752:		bits = ent->client->ps.externalEvent & EV_EVENT_BITS;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 128
ADDP4
INDIRI4
CNSTI4 768
BANDI4
ASGNI4
line 753
;753:		bits = ( bits + EV_EVENT_BIT1 ) & EV_EVENT_BITS;
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 256
ADDI4
CNSTI4 768
BANDI4
ASGNI4
line 754
;754:		ent->client->ps.externalEvent = event | bits;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 128
ADDP4
ADDRFP4 4
INDIRI4
ADDRLP4 0
INDIRI4
BORI4
ASGNI4
line 755
;755:		ent->client->ps.externalEventParm = eventParm;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 132
ADDP4
ADDRFP4 8
INDIRI4
ASGNI4
line 756
;756:		ent->client->ps.externalEventTime = level.time;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 136
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 757
;757:	} else {
ADDRGP4 $303
JUMPV
LABELV $302
line 758
;758:		bits = ent->s.event & EV_EVENT_BITS;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 180
ADDP4
INDIRI4
CNSTI4 768
BANDI4
ASGNI4
line 759
;759:		bits = ( bits + EV_EVENT_BIT1 ) & EV_EVENT_BITS;
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 256
ADDI4
CNSTI4 768
BANDI4
ASGNI4
line 760
;760:		ent->s.event = event | bits;
ADDRFP4 0
INDIRP4
CNSTI4 180
ADDP4
ADDRFP4 4
INDIRI4
ADDRLP4 0
INDIRI4
BORI4
ASGNI4
line 761
;761:		ent->s.eventParm = eventParm;
ADDRFP4 0
INDIRP4
CNSTI4 184
ADDP4
ADDRFP4 8
INDIRI4
ASGNI4
line 762
;762:	}
LABELV $303
line 763
;763:	ent->eventTime = level.time;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 764
;764:}
LABELV $298
endproc G_AddEvent 4 8
export G_Sound
proc G_Sound 8 8
line 772
;765:
;766:
;767:/*
;768:=============
;769:G_Sound
;770:=============
;771:*/
;772:void G_Sound( gentity_t *ent, int channel, int soundIndex ) {
line 775
;773:	gentity_t	*te;
;774:
;775:	te = G_TempEntity( ent->r.currentOrigin, EV_GENERAL_SOUND );
ADDRFP4 0
INDIRP4
CNSTI4 488
ADDP4
ARGP4
CNSTI4 46
ARGI4
ADDRLP4 4
ADDRGP4 G_TempEntity
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 4
INDIRP4
ASGNP4
line 776
;776:	te->s.eventParm = soundIndex;
ADDRLP4 0
INDIRP4
CNSTI4 184
ADDP4
ADDRFP4 8
INDIRI4
ASGNI4
line 777
;777:}
LABELV $306
endproc G_Sound 8 8
export G_SetOrigin
proc G_SetOrigin 8 0
line 794
;778:
;779:
;780://==============================================================================
;781:
;782:
;783:/*
;784:================
;785:G_SetOrigin
;786:
;787:Sets the pos trajectory for a fixed position
;788:================
;789:*/
;790:// JUHOX BUGFIX: add 'const' to G_SetOrigin() parm 'origin'
;791:#if 0
;792:void G_SetOrigin( gentity_t *ent, vec3_t origin ) {
;793:#else
;794:void G_SetOrigin(gentity_t *ent, const vec3_t origin) {
line 796
;795:#endif
;796:	VectorCopy( origin, ent->s.pos.trBase );
ADDRFP4 0
INDIRP4
CNSTI4 24
ADDP4
ADDRFP4 4
INDIRP4
INDIRB
ASGNB 12
line 797
;797:	ent->s.pos.trType = TR_STATIONARY;
ADDRFP4 0
INDIRP4
CNSTI4 12
ADDP4
CNSTI4 0
ASGNI4
line 798
;798:	ent->s.pos.trTime = 0;
ADDRFP4 0
INDIRP4
CNSTI4 16
ADDP4
CNSTI4 0
ASGNI4
line 799
;799:	ent->s.pos.trDuration = 0;
ADDRFP4 0
INDIRP4
CNSTI4 20
ADDP4
CNSTI4 0
ASGNI4
line 800
;800:	VectorClear( ent->s.pos.trDelta );
ADDRLP4 0
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 4
CNSTF4 0
ASGNF4
ADDRLP4 0
INDIRP4
CNSTI4 44
ADDP4
ADDRLP4 4
INDIRF4
ASGNF4
ADDRLP4 0
INDIRP4
CNSTI4 40
ADDP4
ADDRLP4 4
INDIRF4
ASGNF4
ADDRLP4 0
INDIRP4
CNSTI4 36
ADDP4
ADDRLP4 4
INDIRF4
ASGNF4
line 802
;801:
;802:	VectorCopy( origin, ent->r.currentOrigin );
ADDRFP4 0
INDIRP4
CNSTI4 488
ADDP4
ADDRFP4 4
INDIRP4
INDIRB
ASGNB 12
line 803
;803:}
LABELV $307
endproc G_SetOrigin 8 0
data
align 4
LABELV $309
byte 4 0
byte 4 0
byte 4 1065353216
export DebugLine
code
proc DebugLine 104 12
line 813
;804:
;805:/*
;806:================
;807:DebugLine
;808:
;809:  debug polygons only work when running a local game
;810:  with r_debugSurface set to 2
;811:================
;812:*/
;813:int DebugLine(vec3_t start, vec3_t end, int color) {
line 814
;814:	vec3_t points[4], dir, cross, up = {0, 0, 1};
ADDRLP4 72
ADDRGP4 $309
INDIRB
ASGNB 12
line 817
;815:	float dot;
;816:
;817:	VectorCopy(start, points[0]);
ADDRLP4 0
ADDRFP4 0
INDIRP4
INDIRB
ASGNB 12
line 818
;818:	VectorCopy(start, points[1]);
ADDRLP4 0+12
ADDRFP4 0
INDIRP4
INDIRB
ASGNB 12
line 820
;819:	//points[1][2] -= 2;
;820:	VectorCopy(end, points[2]);
ADDRLP4 0+24
ADDRFP4 4
INDIRP4
INDIRB
ASGNB 12
line 822
;821:	//points[2][2] -= 2;
;822:	VectorCopy(end, points[3]);
ADDRLP4 0+36
ADDRFP4 4
INDIRP4
INDIRB
ASGNB 12
line 825
;823:
;824:
;825:	VectorSubtract(end, start, dir);
ADDRLP4 88
ADDRFP4 4
INDIRP4
ASGNP4
ADDRLP4 92
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 60
ADDRLP4 88
INDIRP4
INDIRF4
ADDRLP4 92
INDIRP4
INDIRF4
SUBF4
ASGNF4
ADDRLP4 60+4
ADDRLP4 88
INDIRP4
CNSTI4 4
ADDP4
INDIRF4
ADDRLP4 92
INDIRP4
CNSTI4 4
ADDP4
INDIRF4
SUBF4
ASGNF4
ADDRLP4 60+8
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRF4
ADDRFP4 0
INDIRP4
CNSTI4 8
ADDP4
INDIRF4
SUBF4
ASGNF4
line 826
;826:	VectorNormalize(dir);
ADDRLP4 60
ARGP4
ADDRGP4 VectorNormalize
CALLF4
pop
line 827
;827:	dot = DotProduct(dir, up);
ADDRLP4 84
ADDRLP4 60
INDIRF4
ADDRLP4 72
INDIRF4
MULF4
ADDRLP4 60+4
INDIRF4
ADDRLP4 72+4
INDIRF4
MULF4
ADDF4
ADDRLP4 60+8
INDIRF4
ADDRLP4 72+8
INDIRF4
MULF4
ADDF4
ASGNF4
line 828
;828:	if (dot > 0.99 || dot < -0.99) VectorSet(cross, 1, 0, 0);
ADDRLP4 84
INDIRF4
CNSTF4 1065185444
GTF4 $321
ADDRLP4 84
INDIRF4
CNSTF4 3212669092
GEF4 $319
LABELV $321
ADDRLP4 48
CNSTF4 1065353216
ASGNF4
ADDRLP4 48+4
CNSTF4 0
ASGNF4
ADDRLP4 48+8
CNSTF4 0
ASGNF4
ADDRGP4 $320
JUMPV
LABELV $319
line 829
;829:	else CrossProduct(dir, up, cross);
ADDRLP4 60
ARGP4
ADDRLP4 72
ARGP4
ADDRLP4 48
ARGP4
ADDRGP4 CrossProduct
CALLV
pop
LABELV $320
line 831
;830:
;831:	VectorNormalize(cross);
ADDRLP4 48
ARGP4
ADDRGP4 VectorNormalize
CALLF4
pop
line 833
;832:
;833:	VectorMA(points[0], 2, cross, points[0]);
ADDRLP4 0
ADDRLP4 0
INDIRF4
ADDRLP4 48
INDIRF4
CNSTF4 1073741824
MULF4
ADDF4
ASGNF4
ADDRLP4 0+4
ADDRLP4 0+4
INDIRF4
ADDRLP4 48+4
INDIRF4
CNSTF4 1073741824
MULF4
ADDF4
ASGNF4
ADDRLP4 0+8
ADDRLP4 0+8
INDIRF4
ADDRLP4 48+8
INDIRF4
CNSTF4 1073741824
MULF4
ADDF4
ASGNF4
line 834
;834:	VectorMA(points[1], -2, cross, points[1]);
ADDRLP4 0+12
ADDRLP4 0+12
INDIRF4
ADDRLP4 48
INDIRF4
CNSTF4 3221225472
MULF4
ADDF4
ASGNF4
ADDRLP4 0+12+4
ADDRLP4 0+12+4
INDIRF4
ADDRLP4 48+4
INDIRF4
CNSTF4 3221225472
MULF4
ADDF4
ASGNF4
ADDRLP4 0+12+8
ADDRLP4 0+12+8
INDIRF4
ADDRLP4 48+8
INDIRF4
CNSTF4 3221225472
MULF4
ADDF4
ASGNF4
line 835
;835:	VectorMA(points[2], -2, cross, points[2]);
ADDRLP4 0+24
ADDRLP4 0+24
INDIRF4
ADDRLP4 48
INDIRF4
CNSTF4 3221225472
MULF4
ADDF4
ASGNF4
ADDRLP4 0+24+4
ADDRLP4 0+24+4
INDIRF4
ADDRLP4 48+4
INDIRF4
CNSTF4 3221225472
MULF4
ADDF4
ASGNF4
ADDRLP4 0+24+8
ADDRLP4 0+24+8
INDIRF4
ADDRLP4 48+8
INDIRF4
CNSTF4 3221225472
MULF4
ADDF4
ASGNF4
line 836
;836:	VectorMA(points[3], 2, cross, points[3]);
ADDRLP4 0+36
ADDRLP4 0+36
INDIRF4
ADDRLP4 48
INDIRF4
CNSTF4 1073741824
MULF4
ADDF4
ASGNF4
ADDRLP4 0+36+4
ADDRLP4 0+36+4
INDIRF4
ADDRLP4 48+4
INDIRF4
CNSTF4 1073741824
MULF4
ADDF4
ASGNF4
ADDRLP4 0+36+8
ADDRLP4 0+36+8
INDIRF4
ADDRLP4 48+8
INDIRF4
CNSTF4 1073741824
MULF4
ADDF4
ASGNF4
line 838
;837:
;838:	return trap_DebugPolygonCreate(color, 4, points);
ADDRFP4 8
INDIRI4
ARGI4
CNSTI4 4
ARGI4
ADDRLP4 0
ARGP4
ADDRLP4 100
ADDRGP4 trap_DebugPolygonCreate
CALLI4
ASGNI4
ADDRLP4 100
INDIRI4
RETI4
LABELV $308
endproc DebugLine 104 12
bss
align 4
LABELV numUsedEntities
skip 4
export remappedShaders
align 4
LABELV remappedShaders
skip 16896
import trap_SnapVector
import trap_GeneticParentsAndChildSelection
import trap_BotResetWeaponState
import trap_BotFreeWeaponState
import trap_BotAllocWeaponState
import trap_BotLoadWeaponWeights
import trap_BotGetWeaponInfo
import trap_BotChooseBestFightWeapon
import trap_BotAddAvoidSpot
import trap_BotInitMoveState
import trap_BotFreeMoveState
import trap_BotAllocMoveState
import trap_BotPredictVisiblePosition
import trap_BotMovementViewTarget
import trap_BotReachabilityArea
import trap_BotResetLastAvoidReach
import trap_BotResetAvoidReach
import trap_BotMoveInDirection
import trap_BotMoveToGoal
import trap_BotResetMoveState
import trap_BotFreeGoalState
import trap_BotAllocGoalState
import trap_BotMutateGoalFuzzyLogic
import trap_BotSaveGoalFuzzyLogic
import trap_BotInterbreedGoalFuzzyLogic
import trap_BotFreeItemWeights
import trap_BotLoadItemWeights
import trap_BotUpdateEntityItems
import trap_BotInitLevelItems
import trap_BotSetAvoidGoalTime
import trap_BotAvoidGoalTime
import trap_BotGetLevelItemGoal
import trap_BotGetMapLocationGoal
import trap_BotGetNextCampSpotGoal
import trap_BotItemGoalInVisButNotVisible
import trap_BotTouchingGoal
import trap_BotChooseNBGItem
import trap_BotChooseLTGItem
import trap_BotGetSecondGoal
import trap_BotGetTopGoal
import trap_BotGoalName
import trap_BotDumpGoalStack
import trap_BotDumpAvoidGoals
import trap_BotEmptyGoalStack
import trap_BotPopGoal
import trap_BotPushGoal
import trap_BotResetAvoidGoals
import trap_BotRemoveFromAvoidGoals
import trap_BotResetGoalState
import trap_BotSetChatName
import trap_BotSetChatGender
import trap_BotLoadChatFile
import trap_BotReplaceSynonyms
import trap_UnifyWhiteSpaces
import trap_BotMatchVariable
import trap_BotFindMatch
import trap_StringContains
import trap_BotGetChatMessage
import trap_BotEnterChat
import trap_BotChatLength
import trap_BotReplyChat
import trap_BotNumInitialChats
import trap_BotInitialChat
import trap_BotNumConsoleMessages
import trap_BotNextConsoleMessage
import trap_BotRemoveConsoleMessage
import trap_BotQueueConsoleMessage
import trap_BotFreeChatState
import trap_BotAllocChatState
import trap_Characteristic_String
import trap_Characteristic_BInteger
import trap_Characteristic_Integer
import trap_Characteristic_BFloat
import trap_Characteristic_Float
import trap_BotFreeCharacter
import trap_BotLoadCharacter
import trap_EA_ResetInput
import trap_EA_GetInput
import trap_EA_EndRegular
import trap_EA_View
import trap_EA_Move
import trap_EA_DelayedJump
import trap_EA_Jump
import trap_EA_SelectWeapon
import trap_EA_MoveRight
import trap_EA_MoveLeft
import trap_EA_MoveBack
import trap_EA_MoveForward
import trap_EA_MoveDown
import trap_EA_MoveUp
import trap_EA_Crouch
import trap_EA_Respawn
import trap_EA_Use
import trap_EA_Attack
import trap_EA_Talk
import trap_EA_Gesture
import trap_EA_Action
import trap_EA_Command
import trap_EA_SayTeam
import trap_EA_Say
import trap_AAS_PredictClientMovement
import trap_AAS_Swimming
import trap_AAS_AlternativeRouteGoals
import trap_AAS_PredictRoute
import trap_AAS_EnableRoutingArea
import trap_AAS_AreaTravelTimeToGoalArea
import trap_AAS_AreaReachability
import trap_AAS_IntForBSPEpairKey
import trap_AAS_FloatForBSPEpairKey
import trap_AAS_VectorForBSPEpairKey
import trap_AAS_ValueForBSPEpairKey
import trap_AAS_NextBSPEntity
import trap_AAS_PointContents
import trap_AAS_TraceAreas
import trap_AAS_PointReachabilityAreaIndex
import trap_AAS_PointAreaNum
import trap_AAS_Time
import trap_AAS_PresenceTypeBoundingBox
import trap_AAS_Initialized
import trap_AAS_EntityInfo
import trap_AAS_AreaInfo
import trap_AAS_BBoxAreas
import trap_BotUserCommand
import trap_BotGetServerCommand
import trap_BotGetSnapshotEntity
import trap_BotLibTest
import trap_BotLibUpdateEntity
import trap_BotLibLoadMap
import trap_BotLibStartFrame
import trap_BotLibDefine
import trap_BotLibVarGet
import trap_BotLibVarSet
import trap_BotLibShutdown
import trap_BotLibSetup
import trap_DebugPolygonDelete
import trap_DebugPolygonCreate
import trap_GetEntityToken
import trap_GetUsercmd
import trap_BotFreeClient
import trap_BotAllocateClient
import trap_EntityContact
import trap_EntitiesInBox
import trap_UnlinkEntity
import trap_LinkEntity
import trap_AreasConnected
import trap_AdjustAreaPortalState
import trap_InPVSIgnorePortals
import trap_InPVS
import trap_PointContents
import trap_Trace
import trap_SetBrushModel
import trap_GetServerinfo
import trap_SetUserinfo
import trap_GetUserinfo
import trap_GetConfigstring
import trap_SetConfigstring
import trap_SendServerCommand
import trap_DropClient
import trap_LocateGameData
import trap_Cvar_VariableStringBuffer
import trap_Cvar_VariableValue
import trap_Cvar_VariableIntegerValue
import trap_Cvar_Set
import trap_Cvar_Update
import trap_Cvar_Register
import trap_SendConsoleCommand
import trap_FS_Seek
import trap_FS_GetFileList
import trap_FS_FCloseFile
import trap_FS_Write
import trap_FS_Read
import trap_FS_FOpenFile
import trap_Args
import trap_Argv
import trap_Argc
import trap_Milliseconds
import trap_Error
import trap_Printf
import g_mapName
import g_proxMineTimeout
import g_singlePlayer
import g_enableBreath
import g_enableDust
import g_rankings
import pmove_msec
import pmove_fixed
import g_smoothClients
import g_blueteam
import g_redteam
import g_cubeTimeout
import g_obeliskRespawnDelay
import g_obeliskRegenAmount
import g_obeliskRegenPeriod
import g_obeliskHealth
import g_filterBan
import g_banIPs
import g_teamForceBalance
import g_teamAutoJoin
import g_allowVote
import g_blood
import g_doWarmup
import g_warmup
import g_motd
import g_synchronousClients
import g_weaponTeamRespawn
import g_weaponRespawn
import g_debugDamage
import g_debugAlloc
import g_debugMove
import g_inactivity
import g_forcerespawn
import g_quadfactor
import g_knockback
import g_speed
import g_gravity
import g_needpass
import g_password
import g_friendlyFire
import g_meeting
import g_weaponLimit
import g_cloakingDevice
import g_unlimitedAmmo
import g_noHealthRegen
import g_noItems
import g_grapple
import g_lightningDamageLimit
import g_baseHealth
import g_stamina
import g_armorFragments
import g_tssSafetyMode
import g_tss
import g_respawnAtPOD
import g_respawnDelay
import g_gameSeed
import g_template
import g_debugEFH
import g_challengingEnv
import g_distanceLimit
import g_monsterLoad
import g_scoreMode
import g_monsterProgression
import g_monsterBreeding
import g_maxMonstersPP
import g_monsterLauncher
import g_skipEndSequence
import g_monstersPerTrap
import g_monsterTitans
import g_monsterGuards
import g_monsterHealthScale
import g_monsterSpawnDelay
import g_maxMonsters
import g_minMonsters
import g_artefacts
import g_capturelimit
import g_timelimit
import g_fraglimit
import g_dmflags
import g_restarted
import g_maxGameClients
import g_maxclients
import g_cheats
import g_dedicated
import g_gametype
import g_editmode
import g_entities
import level
import Pickup_Team
import CheckTeamStatus
import TeamplayInfoMessage
import Team_GetLocationMsg
import Team_GetLocation
import SelectCTFSpawnPoint
import Team_FreeEntity
import Team_ReturnFlag
import Team_InitGame
import Team_CheckHurtCarrier
import Team_FragBonuses
import Team_DroppedFlagThink
import AddTeamScore
import TeamColorString
import OtherTeamName
import TeamName
import OtherTeam
import BotTestAAS
import BotAIStartFrame
import BotAIShutdownClient
import BotAISetupClient
import BotAILoadMap
import BotAIShutdown
import BotAISetup
import IsPlayerFighting
import G_Constitution
import G_GetEntityPlayerState
import EntityAudible
import G_MonsterAction
import G_CheckMonsterDamage
import G_GetMonsterGeneric1
import G_IsMovable
import G_CanBeDamaged
import G_UpdateMonsterCounters
import G_AddMonsterSeed
import G_ReleaseTrap
import G_IsFriendlyMonster
import G_MonsterOwner
import G_IsAttackingGuard
import G_ChargeMonsters
import G_IsMonsterSuccessfulAttacking
import G_IsMonsterNearEntity
import IsFightingMonster
import G_MonsterSpawning
import G_SpawnMonster
import G_MonsterType
import G_MonsterBaseHealth
import G_MonsterHealthScale
import G_GetMonsterSpawnPoint
import G_GetMonsterBounds
import G_KillMonster
import G_MonsterScanForNoises
import CheckTouchedMonsters
import G_NumMonsters
import G_UpdateMonsterCS
import G_InitMonsters
import BotInterbreedEndMatch
import Svcmd_BotList_f
import Svcmd_AddBot_f
import G_BotConnect
import G_RemoveQueuedBotBegin
import G_CheckBotSpawn
import G_GetBotInfoByName
import G_GetBotInfoByNumber
import G_InitBots
import Svcmd_AbortPodium_f
import SpawnModelsOnVictoryPads
import UpdateTournamentInfo
import G_WriteSessionData
import G_InitWorldSession
import G_InitSessionData
import G_ReadSessionData
import Svcmd_GameMem_f
import G_InitMemory
import G_Alloc
import CheckObeliskAttack
import Team_GetDroppedOrTakenFlag
import Team_CheckDroppedItem
import OnSameTeam
import Team_GetFlagStatus
import G_RunClient
import ClientEndFrame
import ClientThink
import ClientImpacts
import SetTargetPos
import CheckPlayerDischarge
import TotalChargeDamage
import TSS_Run
import TSS_DangerIndex
import IsPlayerInvolvedInFighting
import NearHomeBase
import ClientCommand
import ClientBegin
import ClientDisconnect
import ClientUserinfoChanged
import ClientSetPlayerClass
import ClientConnect
import SelectAppropriateSpawnPoint
import LogExit
import G_Error
import G_Printf
import SendScoreboardMessageToAllClients
import G_LogPrintf
import G_RunThink
import G_SetPlayerRefOrigin
import CheckTeamLeader
import SetLeader
import FindIntermissionPoint
import DeathmatchScoreboardMessage
import G_SetStats
import MoveClientToIntermission
import FireWeapon
import G_FilterPacket
import G_ProcessIPBans
import ConsoleCommand
import PositionWouldTelefrag
import SpotWouldTelefrag
import CalculateRanks
import AddScore
import player_die
import ClientSpawn
import InitBodyQue
import InitClientResp
import InitClientPersistant
import BeginIntermission
import respawn
import CopyToBodyQue
import SelectSpawnPoint
import SetClientViewAngle
import PickTeam
import TeamLeader
import TeamCount
import GetRespawnLocationType
import ForceRespawn
import Weapon_HookThink
import Weapon_HookFree
import CheckTitanAttack
import CheckGauntletAttack
import SnapVectorTowards
import CalcMuzzlePoint
import LogAccuracyHit
import Weapon_GrapplingHook_Throw
import TeleportPlayer
import trigger_teleporter_touch
import InitMover
import Touch_DoorTrigger
import G_RunMover
import fire_monster_seed
import fire_grapple
import fire_bfg
import fire_rocket
import fire_grenade
import fire_plasma
import fire_blaster
import G_RunMissile
import GibEntity
import ScorePlum
import DropArmor
import DropHealth
import TossClientCubes
import TossClientItems
import body_die
import G_InvulnerabilityEffect
import G_RadiusDamage
import G_Damage
import CanDamage
import DoOverkill
import G_TouchSolids
import G_TouchTriggers
import SaveRegisteredItems
import RegisterItem
import ClearRegisteredItems
import G_SpawnArtefact
import G_BounceItemRotation
import Touch_Item
import Add_Ammo
import ArmorIndex
import Think_Weapon
import FinishSpawningItem
import G_SpawnItem
import SetRespawn
import LaunchItem
import Drop_Item
import PrecacheItem
import UseHoldableItem
import RespawnItem
import G_RunItem
import G_CheckTeamItems
import G_Say
import Cmd_FollowCycle_f
import SetTeam
import BroadcastTeamChange
import StopFollowing
import Cmd_Score_f
import G_EFH_NextDebugSegment
import G_EFH_SpaceExtent
import G_UpdateLightingOrigins
import G_GetTotalWayLength
import G_MakeWorldAwareOfMonsterDeath
import G_FindSegment
import G_UpdateWorld
import G_SpawnWorld
import G_InitWorldSystem
import G_NewString
import G_SpawnEntitiesFromString
import G_SpawnVector
import G_SpawnInt
import G_SpawnFloat
import G_SpawnString
import G_PlayTemplate
import G_PrintTemplateList
import G_SendGameTemplate
import G_TemplateList_Error
import G_TemplateList_Stop
import G_TemplateList_Request
import G_RestartGameTemplates
import G_DefineTemplate
import G_SetTemplateName
import G_LoadGameTemplates
import G_InitGameTemplates
import sv_mapChecksum
import templateList
import numTemplateFiles
import templateFileList
import InitLocalSeed
import SeededRandom
import SetGameSeed
import BG_PlayerTargetOffset
import BG_PlayerTouchesItem
import BG_PlayerStateToEntityStateExtraPolate
import BG_PlayerStateToEntityState
import BG_TouchJumpPad
import BG_AddPredictableEventToPlayerstate
import BG_EvaluateTrajectoryDelta
import BG_EvaluateTrajectory
import BG_CanItemBeGrabbed
import BG_FindItemForHoldable
import BG_FindItemForPowerup
import BG_FindItemForWeapon
import BG_FindItem
import bg_numItems
import bg_itemlist
import weaponAmmoCharacteristics
import Pmove
import PM_UpdateViewAngles
import BG_TSS_GetPlayerEntityInfo
import BG_TSS_GetPlayerInfo
import BG_TSS_SetPlayerInfo
import BG_TSS_DecodeLeadership
import BG_TSS_CodeLeadership
import BG_TSS_DecodeInstructions
import BG_TSS_CodeInstructions
import TSS_DecodeInt
import TSS_CodeInt
import TSS_DecodeNibble
import TSS_CodeNibble
import BG_TSS_AssignPlayers
import BG_TSS_TakeProportionAway
import BG_TSS_Proportion
import BG_VectorChecksum
import BG_ChecksumChar
import BG_TemplateChecksum
import BG_GetGameTemplateList
import BG_ParseGameTemplate
import local_crandom
import local_random
import DeriveLocalSeed
import LocallySeededRandom
import Com_Printf
import Com_Error
import Info_NextPair
import Info_Validate
import Info_SetValueForKey_Big
import Info_SetValueForKey
import Info_RemoveKey_big
import Info_RemoveKey
import Info_ValueForKey
import va
import Q_CleanStr
import Q_PrintStrlen
import Q_strcat
import Q_strncpyz
import Q_strrchr
import Q_strupr
import Q_strlwr
import Q_stricmpn
import Q_strncmp
import Q_stricmp
import Q_isalpha
import Q_isupper
import Q_islower
import Q_isprint
import Com_sprintf
import Parse3DMatrix
import Parse2DMatrix
import Parse1DMatrix
import SkipRestOfLine
import SkipBracedSection
import COM_MatchToken
import COM_ParseWarning
import COM_ParseError
import COM_Compress
import COM_ParseExt
import COM_Parse
import COM_GetCurrentParseLine
import COM_BeginParseSession
import COM_DefaultExtension
import COM_StripExtension
import COM_SkipPath
import Com_Clamp
import PerpendicularVector
import AngleVectors
import MatrixMultiply
import MakeNormalVectors
import RotateAroundDirection
import RotatePointAroundVector
import ProjectPointOnPlane
import PlaneFromPoints
import AngleDelta
import AngleNormalize180
import AngleNormalize360
import AnglesSubtract
import AngleSubtract
import LerpAngle
import AngleMod
import BoxOnPlaneSide
import SetPlaneSignbits
import AxisCopy
import AxisClear
import AnglesToAxis
import vectoangles
import lrand
import Q_crandom
import Q_random
import Q_rand
import Q_acos
import Q_log2
import VectorRotate
import Vector4Scale
import VectorNormalize2
import VectorNormalize
import CrossProduct
import VectorInverse
import VectorNormalizeFast
import DistanceSquared
import Distance
import VectorLengthSquared
import VectorLength
import VectorCompare
import AddPointToBounds
import ClearBounds
import RadiusFromBounds
import NormalizeColor
import ColorBytes4
import ColorBytes3
import _VectorMA
import _VectorScale
import _VectorCopy
import _VectorAdd
import _VectorSubtract
import _DotProduct
import ByteToDir
import DirToByte
import ClampShort
import ClampChar
import Q_rsqrt
import Q_fabs
import axisDefault
import vec3_origin
import g_color_table
import colorDkGrey
import colorMdGrey
import colorLtGrey
import colorWhite
import colorCyan
import colorMagenta
import colorYellow
import colorBlue
import colorGreen
import colorRed
import colorBlack
import bytedirs
import Com_Memcpy
import Com_Memset
import Hunk_Alloc
import FloatSwap
import LongSwap
import ShortSwap
import acos
import fabs
import abs
import tan
import atan2
import cos
import sin
import sqrt
import floor
import ceil
import memcpy
import memset
import memmove
import sscanf
import vsprintf
import _atoi
import atoi
import _atof
import atof
import toupper
import tolower
import strncpy
import strstr
import strchr
import strcmp
import strcpy
import strcat
import strlen
import rand
import srand
import qsort
lit
align 1
LABELV $301
byte 1 71
byte 1 95
byte 1 65
byte 1 100
byte 1 100
byte 1 69
byte 1 118
byte 1 101
byte 1 110
byte 1 116
byte 1 58
byte 1 32
byte 1 122
byte 1 101
byte 1 114
byte 1 111
byte 1 32
byte 1 101
byte 1 118
byte 1 101
byte 1 110
byte 1 116
byte 1 32
byte 1 97
byte 1 100
byte 1 100
byte 1 101
byte 1 100
byte 1 32
byte 1 102
byte 1 111
byte 1 114
byte 1 32
byte 1 101
byte 1 110
byte 1 116
byte 1 105
byte 1 116
byte 1 121
byte 1 32
byte 1 37
byte 1 105
byte 1 10
byte 1 0
align 1
LABELV $274
byte 1 116
byte 1 101
byte 1 109
byte 1 112
byte 1 69
byte 1 110
byte 1 116
byte 1 105
byte 1 116
byte 1 121
byte 1 0
align 1
LABELV $269
byte 1 102
byte 1 114
byte 1 101
byte 1 101
byte 1 100
byte 1 0
align 1
LABELV $252
byte 1 71
byte 1 95
byte 1 83
byte 1 112
byte 1 97
byte 1 119
byte 1 110
byte 1 58
byte 1 32
byte 1 110
byte 1 111
byte 1 32
byte 1 102
byte 1 114
byte 1 101
byte 1 101
byte 1 32
byte 1 101
byte 1 110
byte 1 116
byte 1 105
byte 1 116
byte 1 105
byte 1 101
byte 1 115
byte 1 0
align 1
LABELV $250
byte 1 37
byte 1 52
byte 1 105
byte 1 58
byte 1 32
byte 1 37
byte 1 115
byte 1 10
byte 1 0
align 1
LABELV $222
byte 1 110
byte 1 111
byte 1 99
byte 1 108
byte 1 97
byte 1 115
byte 1 115
byte 1 0
align 1
LABELV $202
byte 1 40
byte 1 37
byte 1 105
byte 1 32
byte 1 37
byte 1 105
byte 1 32
byte 1 37
byte 1 105
byte 1 41
byte 1 0
align 1
LABELV $190
byte 1 101
byte 1 110
byte 1 116
byte 1 105
byte 1 116
byte 1 121
byte 1 32
byte 1 119
byte 1 97
byte 1 115
byte 1 32
byte 1 114
byte 1 101
byte 1 109
byte 1 111
byte 1 118
byte 1 101
byte 1 100
byte 1 32
byte 1 119
byte 1 104
byte 1 105
byte 1 108
byte 1 101
byte 1 32
byte 1 117
byte 1 115
byte 1 105
byte 1 110
byte 1 103
byte 1 32
byte 1 116
byte 1 97
byte 1 114
byte 1 103
byte 1 101
byte 1 116
byte 1 115
byte 1 10
byte 1 0
align 1
LABELV $185
byte 1 87
byte 1 65
byte 1 82
byte 1 78
byte 1 73
byte 1 78
byte 1 71
byte 1 58
byte 1 32
byte 1 69
byte 1 110
byte 1 116
byte 1 105
byte 1 116
byte 1 121
byte 1 32
byte 1 117
byte 1 115
byte 1 101
byte 1 100
byte 1 32
byte 1 105
byte 1 116
byte 1 115
byte 1 101
byte 1 108
byte 1 102
byte 1 46
byte 1 10
byte 1 0
align 1
LABELV $169
byte 1 71
byte 1 95
byte 1 80
byte 1 105
byte 1 99
byte 1 107
byte 1 84
byte 1 97
byte 1 114
byte 1 103
byte 1 101
byte 1 116
byte 1 58
byte 1 32
byte 1 116
byte 1 97
byte 1 114
byte 1 103
byte 1 101
byte 1 116
byte 1 32
byte 1 37
byte 1 115
byte 1 32
byte 1 110
byte 1 111
byte 1 116
byte 1 32
byte 1 102
byte 1 111
byte 1 117
byte 1 110
byte 1 100
byte 1 10
byte 1 0
align 1
LABELV $157
byte 1 71
byte 1 95
byte 1 80
byte 1 105
byte 1 99
byte 1 107
byte 1 84
byte 1 97
byte 1 114
byte 1 103
byte 1 101
byte 1 116
byte 1 32
byte 1 99
byte 1 97
byte 1 108
byte 1 108
byte 1 101
byte 1 100
byte 1 32
byte 1 119
byte 1 105
byte 1 116
byte 1 104
byte 1 32
byte 1 78
byte 1 85
byte 1 76
byte 1 76
byte 1 32
byte 1 116
byte 1 97
byte 1 114
byte 1 103
byte 1 101
byte 1 116
byte 1 110
byte 1 97
byte 1 109
byte 1 101
byte 1 10
byte 1 0
align 1
LABELV $139
byte 1 37
byte 1 115
byte 1 0
align 1
LABELV $126
byte 1 71
byte 1 95
byte 1 70
byte 1 105
byte 1 110
byte 1 100
byte 1 67
byte 1 111
byte 1 110
byte 1 102
byte 1 105
byte 1 103
byte 1 115
byte 1 116
byte 1 114
byte 1 105
byte 1 110
byte 1 103
byte 1 73
byte 1 110
byte 1 100
byte 1 101
byte 1 120
byte 1 58
byte 1 32
byte 1 111
byte 1 118
byte 1 101
byte 1 114
byte 1 102
byte 1 108
byte 1 111
byte 1 119
byte 1 0
align 1
LABELV $107
byte 1 37
byte 1 115
byte 1 61
byte 1 37
byte 1 115
byte 1 58
byte 1 37
byte 1 53
byte 1 46
byte 1 50
byte 1 102
byte 1 64
byte 1 0
